{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/contexts/PlayerContextProvider.js\";\nimport React, { createContext, useState, useContext } from 'react';\nimport { QueueContext } from './QueueContextProvider';\nexport const PlayerContext = createContext();\n\nconst PlayerContextProvider = props => {\n  const [isPlaying, updateIsPlaying] = useState(false);\n  const {\n    loadQueueNext,\n    loadQueuePrevious\n  } = useContext(QueueContext);\n\n  const startPlaying = audio => {\n    if (audio) {\n      audio.play();\n      updateIsPlaying(true);\n    }\n  };\n\n  const stopPlaying = audio => {\n    if (audio) {\n      audio.pause();\n      updateIsPlaying(false);\n    }\n  }; // audio && currentEpisode\n\n\n  const resetPlayer = audio => {\n    if (audio) {\n      stopPlaying(audio);\n      audio.currentTime = 0;\n      startPlaying(audio);\n    }\n  };\n\n  const playNext = () => {\n    // loadQueueNext();\n    console.log('playing next');\n  };\n\n  const playPrevious = () => {\n    // loadQueuePrevious();\n    console.log('playing previous');\n  };\n\n  return /*#__PURE__*/React.createElement(PlayerContext.Provider, {\n    value: {\n      isPlaying,\n      startPlaying,\n      stopPlaying,\n      resetPlayer,\n      playNext,\n      playPrevious\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default PlayerContextProvider;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/contexts/PlayerContextProvider.js"],"names":["React","createContext","useState","useContext","QueueContext","PlayerContext","PlayerContextProvider","props","isPlaying","updateIsPlaying","loadQueueNext","loadQueuePrevious","startPlaying","audio","play","stopPlaying","pause","resetPlayer","currentTime","playNext","console","log","playPrevious","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGJ,aAAa,EAAnC;;AAEP,MAAMK,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BP,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM;AAAEQ,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAuCR,UAAU,CAACC,YAAD,CAAvD;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIA,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAACC,IAAN;AACAL,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ,GALD;;AAOA,QAAMM,WAAW,GAAIF,KAAD,IAAW;AAC3B,QAAIA,KAAJ,EAAW;AACPA,MAAAA,KAAK,CAACG,KAAN;AACAP,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,GALD,CAXqC,CAkBrC;;;AACA,QAAMQ,WAAW,GAAIJ,KAAD,IAAW;AAC3B,QAAIA,KAAJ,EAAW;AACPE,MAAAA,WAAW,CAACF,KAAD,CAAX;AACAA,MAAAA,KAAK,CAACK,WAAN,GAAoB,CAApB;AACAN,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACH;AACJ,GAND;;AAQA,QAAMM,QAAQ,GAAG,MAAM;AACnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAHD;;AAKA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3Bb,MAAAA,SAD2B;AAE3BI,MAAAA,YAF2B;AAG3BG,MAAAA,WAH2B;AAI3BE,MAAAA,WAJ2B;AAK3BE,MAAAA,QAL2B;AAM3BG,MAAAA;AAN2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKf,KAAK,CAACgB,QARX,CADJ;AAYH,CAjDD;;AAmDA,eAAejB,qBAAf","sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport { QueueContext } from './QueueContextProvider';\n\nexport const PlayerContext = createContext();\n\nconst PlayerContextProvider = (props) => {\n    const [isPlaying, updateIsPlaying] = useState(false);\n    const { loadQueueNext, loadQueuePrevious } = useContext(QueueContext);\n\n    const startPlaying = (audio) => {\n        if (audio) {\n            audio.play();\n            updateIsPlaying(true);\n        }\n    }\n\n    const stopPlaying = (audio) => {\n        if (audio) {\n            audio.pause();\n            updateIsPlaying(false);\n        }\n    }\n\n    // audio && currentEpisode\n    const resetPlayer = (audio) => {\n        if (audio) {\n            stopPlaying(audio);\n            audio.currentTime = 0;\n            startPlaying(audio);\n        }\n    }\n\n    const playNext = () => {\n        // loadQueueNext();\n        console.log('playing next');\n    }\n\n    const playPrevious = () => {\n        // loadQueuePrevious();\n        console.log('playing previous');\n    }\n\n    return (\n        <PlayerContext.Provider value={{\n            isPlaying,\n            startPlaying,\n            stopPlaying,\n            resetPlayer,\n            playNext,\n            playPrevious\n        }}>\n            {props.children}\n        </PlayerContext.Provider>\n    );\n}\n\nexport default PlayerContextProvider;"]},"metadata":{},"sourceType":"module"}