{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/Details.js\";\nimport React, { useContext, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { QueueContext } from '../../../contexts/QueueContextProvider';\nimport { PlayerContext } from '../../../contexts/PlayerContextProvider';\nimport { SEARCH_TYPES } from '../../../constants';\nimport capitalizeString from '../../../utils/capitalizeString';\nimport convertTime from '../../../utils/convertTime';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport Button from '../../../UI/Button/Button';\nconst Image = styled.img`\n    display: block;\n    max-width: 250px;\n    object-fit: contain;\n    object-position: top;\n`;\nconst Header = styled.header``;\nconst Lead = styled.h2`\n    position: relative;\n    font-size: 2em;\n    line-height: 1.25;\n    color: ${({\n  theme\n}) => theme.colors.positive};\n\n    @media (min-width: 500px) {\n        max-width: calc(0.5em * 50);\n    }\n`;\nconst Label = styled.p`\n    font-size: ${({\n  theme\n}) => theme.typography.small};\n    font-weight: 400;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Type = styled(Label)`\n    margin: 0.75em 0 0.25em 0;\n\n    @media (min-width: 1024px) {\n        margin: 0 0 0.25em 0;\n    }\n`;\nconst Publisher = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\nconst Show = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\nconst InternalLink = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst Description = styled(Accordion)`\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Controls = styled.div`\n    margin-top: 0.75em;\n`;\nconst ControlButton = styled(Button)`\n    margin-right: 0.75em;\n`;\nconst Links = styled.div`\n    margin-top: 0.75em;\n    @media (min-width: 500px) {\n        display: inline-block;\n        margin-top: 0;\n        margin-left: 0.75em;\n    }\n`;\nconst ExternalLink = styled.a`\n    display: inline-block;\n    text-decoration: none;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst Split = styled.div`\n    @media (min-width: 1024px) {\n        display: flex;\n    }\n`;\nconst Content = styled.div`\n    @media (min-width: 1024px) {\n        margin-left: 3em;\n    }\n`;\nconst Time = styled.div`\n    margin-top: 0.75em;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Date = styled.time`\n    display: inline-block;\n`;\nconst Duration = styled.div`\n    position: relative;\n    display: inline-block;\n    margin-left: 1em;\n\n    &::before {\n        content: 'â€¢';\n        position: absolute;\n        top: 50%;\n        left: -0.5em;\n        transform: translate(-50%, -50%);\n    }\n`;\n\nconst Details = ({\n  details,\n  library\n}) => {\n  const {\n    loadQueue,\n    queue,\n    currentEpisode\n  } = useContext(QueueContext);\n  const {\n    isPlaying,\n    startPlaying,\n    stopPlaying\n  } = useContext(PlayerContext);\n\n  const loadEpisodes = () => {\n    if (details.type === SEARCH_TYPES.show) {\n      loadQueue(details.episodes[0].id, details.episodes);\n    } else {\n      loadQueue(details.id, details.episodes);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: details.image,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    type: details.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Type, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, details.type ? capitalizeString(details.type) : null), /*#__PURE__*/React.createElement(Lead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, details.name), details.type === SEARCH_TYPES.show ? /*#__PURE__*/React.createElement(Publisher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, \"By \", details.publisher) : /*#__PURE__*/React.createElement(Show, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InternalLink, {\n    to: `/shows/${details.showId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, details.showName))), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, details.description), /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, !isPlaying && (currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.id) === details.id ? /*#__PURE__*/React.createElement(ControlButton, {\n    type: \"button\",\n    onClick: startPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, \"Play\") : isPlaying && (currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.id) === details.id ? /*#__PURE__*/React.createElement(ControlButton, {\n    type: \"button\",\n    onClick: stopPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Pause\") : /*#__PURE__*/React.createElement(ControlButton, {\n    type: \"button\",\n    onClick: loadEpisodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }, \"Play\"), console.log(queue), /*#__PURE__*/React.createElement(Button, {\n    onClick: library.inLibrary ? library.removeFromLibrary : library.addToLibrary,\n    type: \"button\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, library.inLibrary ? library.removeFromLibraryText : library.addToLibraryText), /*#__PURE__*/React.createElement(Links, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    href: details.external,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, \"Listen on Spotify\"))), details.type === SEARCH_TYPES.episode ? /*#__PURE__*/React.createElement(Time, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Date, {\n    dateTime: details.releaseDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, details.releaseDate), /*#__PURE__*/React.createElement(Duration, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, convertTime(details.duration))) : null)));\n};\n\nDetails.propTypes = {\n  type: PropTypes.oneOf([SEARCH_TYPES.show, SEARCH_TYPES.episode])\n};\nexport default Details;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/Details.js"],"names":["React","useContext","Fragment","Link","styled","PropTypes","QueueContext","PlayerContext","SEARCH_TYPES","capitalizeString","convertTime","Accordion","Button","Image","img","Header","header","Lead","h2","theme","colors","positive","Label","p","typography","small","specific","Type","Publisher","Show","InternalLink","Description","Controls","div","ControlButton","Links","ExternalLink","a","Split","Content","Time","Date","time","Duration","Details","details","library","loadQueue","queue","currentEpisode","isPlaying","startPlaying","stopPlaying","loadEpisodes","type","show","episodes","id","image","name","publisher","showId","showName","description","console","log","inLibrary","removeFromLibrary","addToLibrary","removeFromLibraryText","addToLibraryText","external","episode","releaseDate","duration","propTypes","oneOf"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { QueueContext } from '../../../contexts/QueueContextProvider';\nimport { PlayerContext } from '../../../contexts/PlayerContextProvider';\nimport { SEARCH_TYPES } from '../../../constants';\nimport capitalizeString from '../../../utils/capitalizeString';\nimport convertTime from '../../../utils/convertTime';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport Button from '../../../UI/Button/Button';\n\nconst Image = styled.img`\n    display: block;\n    max-width: 250px;\n    object-fit: contain;\n    object-position: top;\n`;\n\nconst Header = styled.header``;\n\nconst Lead = styled.h2`\n    position: relative;\n    font-size: 2em;\n    line-height: 1.25;\n    color: ${({ theme }) => theme.colors.positive};\n\n    @media (min-width: 500px) {\n        max-width: calc(0.5em * 50);\n    }\n`;\n\nconst Label = styled.p`\n    font-size: ${({ theme }) => theme.typography.small};\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Type = styled(Label)`\n    margin: 0.75em 0 0.25em 0;\n\n    @media (min-width: 1024px) {\n        margin: 0 0 0.25em 0;\n    }\n`;\n\nconst Publisher = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\n\nconst Show = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\n\nconst InternalLink = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst Description = styled(Accordion)`\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Controls = styled.div`\n    margin-top: 0.75em;\n`;\n\nconst ControlButton = styled(Button)`\n    margin-right: 0.75em;\n`;\n\nconst Links = styled.div`\n    margin-top: 0.75em;\n    @media (min-width: 500px) {\n        display: inline-block;\n        margin-top: 0;\n        margin-left: 0.75em;\n    }\n`;\n\nconst ExternalLink = styled.a`\n    display: inline-block;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.specific};\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst Split = styled.div`\n    @media (min-width: 1024px) {\n        display: flex;\n    }\n`;\n\nconst Content = styled.div`\n    @media (min-width: 1024px) {\n        margin-left: 3em;\n    }\n`;\n\nconst Time = styled.div`\n    margin-top: 0.75em;\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Date = styled.time`\n    display: inline-block;\n`;\n\nconst Duration = styled.div`\n    position: relative;\n    display: inline-block;\n    margin-left: 1em;\n\n    &::before {\n        content: 'â€¢';\n        position: absolute;\n        top: 50%;\n        left: -0.5em;\n        transform: translate(-50%, -50%);\n    }\n`;\n\nconst Details = ({ details, library }) => {\n    const { loadQueue, queue, currentEpisode } = useContext(QueueContext);\n    const { isPlaying, startPlaying, stopPlaying } = useContext(PlayerContext);\n\n    const loadEpisodes = () => {\n        if (details.type === SEARCH_TYPES.show) {\n            loadQueue(details.episodes[0].id, details.episodes);\n        } else {\n            loadQueue(details.id, details.episodes);\n        }\n    }\n\n    return (\n        <Fragment>\n            <Split>\n                <Image src={details.image} alt=\"\"/>\n                <Content type={details.type}>\n                    <Header>\n                        <Type>\n                            {details.type ? capitalizeString(details.type) : null}\n                        </Type>\n                        <Lead>\n                            {details.name}\n                        </Lead>\n                        {details.type === SEARCH_TYPES.show ?\n                            <Publisher>\n                                By {details.publisher}\n                            </Publisher>\n                            :\n                            <Show>\n                                <InternalLink to={`/shows/${details.showId}`}>\n                                    {details.showName}\n                                </InternalLink>\n                            </Show>\n                        }\n                    </Header>\n                    <Description>\n                        {details.description}\n                    </Description>\n                    <Controls>\n                        {/* Episode Page */}\n                        { !isPlaying && currentEpisode?.id === details.id ?\n                            <ControlButton type=\"button\" onClick={startPlaying}>\n                                Play\n                            </ControlButton>\n                            :\n                            isPlaying && currentEpisode?.id === details.id ?\n                                <ControlButton type=\"button\" onClick={stopPlaying}>\n                                    Pause\n                                </ControlButton>\n                                :\n                                <ControlButton type=\"button\" onClick={loadEpisodes}>\n                                    Play\n                                </ControlButton>\n                        }\n                        {/* Episode Page */}\n                        {console.log(queue)}\n                        <Button onClick={library.inLibrary ? library.removeFromLibrary : library.addToLibrary} type=\"button\" outline>\n                            {library.inLibrary ? library.removeFromLibraryText : library.addToLibraryText}\n                        </Button>\n                        <Links>\n                            <ExternalLink href={details.external}>\n                                Listen on Spotify\n                            </ExternalLink>\n                        </Links>\n                    </Controls>\n                    {details.type === SEARCH_TYPES.episode ?\n                        <Time>\n                            <Date dateTime={details.releaseDate}>\n                                {details.releaseDate}\n                            </Date>\n                            <Duration>{convertTime(details.duration)}</Duration>\n                        </Time>\n                        :\n                        null\n                    }\n                </Content>\n            </Split>\n        </Fragment>\n    );\n}\n\nDetails.propTypes = {\n    type: PropTypes.oneOf([SEARCH_TYPES.show, SEARCH_TYPES.episode])\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}