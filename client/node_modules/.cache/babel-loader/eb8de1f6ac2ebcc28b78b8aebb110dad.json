{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/client/src/components/Header/Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Profile from './Profile/Profile';\nimport Search from './Search/Search';\nimport MenuButton from '../../UI/MenuButton/MenuButton';\nimport Spotify from '../../models/Spotify';\nimport DefaultImage from '../../assets/img/profile.png';\nconst Element = styled.header`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 1.5em 2em;\n    background-color: ${({\n  theme\n}) => theme.colors.tertiary};\n\n    & > * {\n        margin-top: 2em;\n    }\n\n    & > *:first-child {\n        margin-top: 0;\n    }\n\n    @media (min-width: 500px) {\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        & > * {\n            margin-top: 0;\n        }\n    }\n`;\nconst StyledMenuButton = styled(MenuButton)`\n    top: 0;\n    right: 2em;\n\n    @media (min-width: 500px) {\n        top: 50%;\n        transform: translateY(-50%);\n    }\n`;\n\nfunction Header(props) {\n  const [profileURL, profileUpdateURL] = useState('');\n  const [profileName, profileUpdateName] = useState('');\n  const [profileImage, profileUpdateImage] = useState('');\n  const [imageLoading, updateImageLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      try {\n        const profile = await Spotify.getUserProfile();\n\n        if (!profile) {\n          return;\n        }\n\n        profileUpdateURL(profile.external_urls.spotify);\n        profileUpdateName(profile.display_name);\n        profileUpdateImage(profile.images[0].url || DefaultImage);\n        updateImageLoading(false);\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(Element, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    external: profileURL,\n    name: profileName,\n    image: profileImage,\n    loading: imageLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledMenuButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/client/src/components/Header/Header.js"],"names":["React","useState","useEffect","styled","Profile","Search","MenuButton","Spotify","DefaultImage","Element","header","theme","colors","tertiary","StyledMenuButton","Header","props","profileURL","profileUpdateURL","profileName","profileUpdateName","profileImage","profileUpdateImage","imageLoading","updateImageLoading","profile","getUserProfile","external_urls","spotify","display_name","images","url","err","Error","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,MAAMC,OAAO,GAAGN,MAAM,CAACO,MAAO;;;;;;wBAMN,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,QAAS;;;;;;;;;;;;;;;;;;CAN7D;AA0BA,MAAMC,gBAAgB,GAAGX,MAAM,CAACG,UAAD,CAAa;;;;;;;;CAA5C;;AAUA,SAASS,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCjB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACkB,WAAD,EAAcC,iBAAd,IAAmCnB,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACoB,YAAD,EAAeC,kBAAf,IAAqCrB,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACsB,YAAD,EAAeC,kBAAf,IAAqCvB,QAAQ,CAAC,IAAD,CAAnD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAMuB,OAAO,GAAG,MAAMlB,OAAO,CAACmB,cAAR,EAAtB;;AACA,YAAI,CAACD,OAAL,EAAc;AACV;AACH;;AACDP,QAAAA,gBAAgB,CAACO,OAAO,CAACE,aAAR,CAAsBC,OAAvB,CAAhB;AACAR,QAAAA,iBAAiB,CAACK,OAAO,CAACI,YAAT,CAAjB;AACAP,QAAAA,kBAAkB,CAACG,OAAO,CAACK,MAAR,CAAe,CAAf,EAAkBC,GAAlB,IAAyBvB,YAA1B,CAAlB;AACAgB,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OATD,CASE,OAAMQ,GAAN,EAAW;AACT,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AACJ,KAbD;AAcH,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,QAAQ,EAAEf,UADd;AAEI,IAAA,IAAI,EAAEE,WAFV;AAGI,IAAA,KAAK,EAAEE,YAHX;AAII,IAAA,OAAO,EAAEE,YAAY,CAACW,QAAb,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH;;AAED,eAAenB,MAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport styled from 'styled-components';\nimport Profile from './Profile/Profile';\nimport Search from './Search/Search';\nimport MenuButton from '../../UI/MenuButton/MenuButton';\nimport Spotify from '../../models/Spotify';\nimport DefaultImage from '../../assets/img/profile.png';\n\nconst Element = styled.header`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 1.5em 2em;\n    background-color: ${({ theme }) => theme.colors.tertiary};\n\n    & > * {\n        margin-top: 2em;\n    }\n\n    & > *:first-child {\n        margin-top: 0;\n    }\n\n    @media (min-width: 500px) {\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        & > * {\n            margin-top: 0;\n        }\n    }\n`;\n\nconst StyledMenuButton = styled(MenuButton)`\n    top: 0;\n    right: 2em;\n\n    @media (min-width: 500px) {\n        top: 50%;\n        transform: translateY(-50%);\n    }\n`;\n\nfunction Header(props) {\n    const [profileURL, profileUpdateURL] = useState('');\n    const [profileName, profileUpdateName] = useState('');\n    const [profileImage, profileUpdateImage] = useState('');\n    const [imageLoading, updateImageLoading] = useState(true);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const profile = await Spotify.getUserProfile();\n                if (!profile) {\n                    return;\n                }\n                profileUpdateURL(profile.external_urls.spotify);\n                profileUpdateName(profile.display_name);\n                profileUpdateImage(profile.images[0].url || DefaultImage);\n                updateImageLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, []);\n\n    return (\n        <Element>\n            <Profile\n                external={profileURL}\n                name={profileName}\n                image={profileImage}\n                loading={imageLoading.toString()}/>\n            <Search/>\n            <StyledMenuButton/>\n        </Element>\n    );\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}