{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport Details from '../../Details/Details';\nimport Tiles from '../../Tiles/Tiles';\nimport Tile from '../../Tiles/Tile/Tile';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading'; // const selectCorrespondingEpisodes = (currentEpisodeId, episodes) => {\n//     let episodesRangeBeginningIndex = 0;\n//     const episodesToDisplay = 4;\n//     const currentEpisodeIndex = episodes\n//         .findIndex(episode => episode.id === currentEpisodeId);\n//     if (currentEpisodeIndex !== -1 && currentEpisodeIndex >= episodesToDisplay) {\n//         episodesRangeBeginningIndex = currentEpisodeIndex;\n//     }\n//     return episodes\n//         .splice(episodesRangeBeginningIndex - episodesToDisplay, episodesToDisplay)\n//         .reverse();\n// }\n\nconst selectCorrespondingEpisodes = (currentEpisodeId, episodes) => {\n  let episodesRangeBeginningIndex = 0;\n  const episodesToDisplay = 4;\n  const currentEpisodeIndex = episodes.findIndex(episode => episode.id === currentEpisodeId);\n  console.log(currentEpisodeIndex, episodes);\n};\n\nconst Episode = ({\n  location\n}) => {\n  const EPISODE_ID = extractId(location.pathname);\n  const [details, updateDetails] = useState({});\n  const [library, updateLibrary] = useState({});\n  const [episodes, updateEpisodes] = useState([]);\n  const [isLoading, updateIsLoading] = useState(true);\n\n  const handleEpisodeLike = id => {\n    console.log(`Episode added to the library [${id}]`);\n  };\n\n  const handleEpisodeRemoval = id => {\n    console.log(`Episode removed from the library [${id}]`);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const episode = await Spotify.getEpisodeDetails(EPISODE_ID);\n        const show = await Spotify.getShowDetails(episode.show.id);\n        const moreEpisodes = selectCorrespondingEpisodes(EPISODE_ID, show.episodes.items);\n        updateDetails({\n          id: EPISODE_ID,\n          name: episode.name,\n          description: episode.description,\n          external: episode.external_urls.spotify,\n          type: SEARCH_TYPES.episode,\n          image: episode.images[1].url,\n          showName: episode.show.name,\n          showId: episode.show.id,\n          releaseDate: episode.release_date,\n          duration: episode.duration_ms,\n          episodes: show.episodes.items\n        });\n        updateLibrary({\n          inLibrary: false,\n          addToLibraryText: 'Like',\n          removeFromLibraryText: 'Remove',\n          addToLibrary: () => handleEpisodeLike(EPISODE_ID),\n          removeFromLibrary: () => handleEpisodeRemoval(EPISODE_ID)\n        });\n        updateEpisodes(moreEpisodes);\n        updateIsLoading(false);\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, [EPISODE_ID]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    details: details,\n    library: library,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tiles, {\n    title: \"More episodes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, episodes ? episodes.map(episode => {\n    return /*#__PURE__*/React.createElement(Tile, {\n      key: episode.id,\n      id: episode.id,\n      title: episode.name,\n      description: episode.description,\n      image: episode.images[1].url,\n      type: SEARCH_TYPES.episode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 32\n      }\n    });\n  }) : null), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n    loading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Episode);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js"],"names":["React","useState","useEffect","Fragment","withRouter","SEARCH_TYPES","Spotify","extractId","Details","Tiles","Tile","WorkspaceLoading","selectCorrespondingEpisodes","currentEpisodeId","episodes","episodesRangeBeginningIndex","episodesToDisplay","currentEpisodeIndex","findIndex","episode","id","console","log","Episode","location","EPISODE_ID","pathname","details","updateDetails","library","updateLibrary","updateEpisodes","isLoading","updateIsLoading","handleEpisodeLike","handleEpisodeRemoval","getEpisodeDetails","show","getShowDetails","moreEpisodes","items","name","description","external","external_urls","spotify","type","image","images","url","showName","showId","releaseDate","release_date","duration","duration_ms","inLibrary","addToLibraryText","removeFromLibraryText","addToLibrary","removeFromLibrary","err","Error","map","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport Details from '../../Details/Details';\nimport Tiles from '../../Tiles/Tiles';\nimport Tile from '../../Tiles/Tile/Tile';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\n\n// const selectCorrespondingEpisodes = (currentEpisodeId, episodes) => {\n//     let episodesRangeBeginningIndex = 0;\n//     const episodesToDisplay = 4;\n//     const currentEpisodeIndex = episodes\n//         .findIndex(episode => episode.id === currentEpisodeId);\n//     if (currentEpisodeIndex !== -1 && currentEpisodeIndex >= episodesToDisplay) {\n//         episodesRangeBeginningIndex = currentEpisodeIndex;\n//     }\n//     return episodes\n//         .splice(episodesRangeBeginningIndex - episodesToDisplay, episodesToDisplay)\n//         .reverse();\n// }\nconst selectCorrespondingEpisodes = (currentEpisodeId, episodes) => {\n    let episodesRangeBeginningIndex = 0;\n    const episodesToDisplay = 4;\n    const currentEpisodeIndex = episodes\n        .findIndex(episode => episode.id === currentEpisodeId);\n    console.log(currentEpisodeIndex, episodes);\n}\n\nconst Episode = ({ location }) => {\n    const EPISODE_ID = extractId(location.pathname);\n    const [details, updateDetails] = useState({});\n    const [library, updateLibrary] = useState({});\n    const [episodes, updateEpisodes] = useState([]);\n    const [isLoading, updateIsLoading] = useState(true);\n\n    const handleEpisodeLike = (id) => {\n        console.log(`Episode added to the library [${id}]`);\n    };\n\n    const handleEpisodeRemoval = (id) => {\n        console.log(`Episode removed from the library [${id}]`);\n    };\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const episode = await Spotify.getEpisodeDetails(EPISODE_ID);\n                const show = await Spotify.getShowDetails(episode.show.id);\n                const moreEpisodes = selectCorrespondingEpisodes(EPISODE_ID, show.episodes.items);\n                updateDetails({\n                    id: EPISODE_ID,\n                    name: episode.name,\n                    description: episode.description,\n                    external: episode.external_urls.spotify,\n                    type: SEARCH_TYPES.episode,\n                    image: episode.images[1].url,\n                    showName: episode.show.name,\n                    showId: episode.show.id,\n                    releaseDate: episode.release_date,\n                    duration: episode.duration_ms,\n                    episodes: show.episodes.items\n                });\n                updateLibrary({\n                    inLibrary: false,\n                    addToLibraryText: 'Like',\n                    removeFromLibraryText: 'Remove',\n                    addToLibrary: () => handleEpisodeLike(EPISODE_ID),\n                    removeFromLibrary: () => handleEpisodeRemoval(EPISODE_ID)\n                });\n                updateEpisodes(moreEpisodes);\n                updateIsLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, [EPISODE_ID]);\n\n    return (\n        <Fragment>\n            <Details details={details} library={library}/>\n            <Tiles title=\"More episodes\">\n                { episodes ?\n                    episodes.map(episode => {\n                        return <Tile\n                            key={episode.id}\n                            id={episode.id}\n                            title={episode.name}\n                            description={episode.description}\n                            image={episode.images[1].url}\n                            type={SEARCH_TYPES.episode} />\n                }) : null}\n            </Tiles>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nexport default withRouter(Episode);"]},"metadata":{},"sourceType":"module"}