{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js\";\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\n\nconst Episode = ({\n  location\n}) => {\n  useEffect(() => {\n    (async () => {\n      const path = location.pathname;\n      const episodeId = extractId(path);\n\n      try {\n        const {\n          name,\n          external_urls,\n          description,\n          images\n        } = await Spotify.getShowDetails(episodeId);\n        console.log(name, external_urls, description, images); // updateDetails({\n        //     name,\n        //     external: external_urls.spotify,\n        //     description,\n        //     image: images[1].url,\n        //     type: SEARCH_TYPES.episode\n        // });\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Episode\");\n};\n\nexport default withRouter(Episode);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js"],"names":["React","useEffect","withRouter","SEARCH_TYPES","Spotify","extractId","Episode","location","path","pathname","episodeId","name","external_urls","description","images","getShowDetails","console","log","err","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE9BN,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMO,IAAI,GAAGD,QAAQ,CAACE,QAAtB;AACA,YAAMC,SAAS,GAAGL,SAAS,CAACG,IAAD,CAA3B;;AACA,UAAI;AACA,cAAM;AACFG,UAAAA,IADE;AAEFC,UAAAA,aAFE;AAGFC,UAAAA,WAHE;AAIFC,UAAAA;AAJE,YAIS,MAAMV,OAAO,CAACW,cAAR,CAAuBL,SAAvB,CAJrB;AAKIM,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAkBC,aAAlB,EAAiCC,WAAjC,EAA8CC,MAA9C,EANJ,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAdD,CAcE,OAAMI,GAAN,EAAW;AACT,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AACJ,KApBD;AAqBH,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAGH,CA7BD;;AA+BA,eAAehB,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\n\nconst Episode = ({ location }) => {\n\n    useEffect(() => {\n        (async () => {\n            const path = location.pathname;\n            const episodeId = extractId(path);\n            try {\n                const {\n                    name,\n                    external_urls,\n                    description,\n                    images } = await Spotify.getShowDetails(episodeId);\n                    console.log(name, external_urls, description, images);\n                // updateDetails({\n                //     name,\n                //     external: external_urls.spotify,\n                //     description,\n                //     image: images[1].url,\n                //     type: SEARCH_TYPES.episode\n                // });\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, []);\n\n    return (\n        <div>Episode</div>\n    );\n}\n\nexport default withRouter(Episode);"]},"metadata":{},"sourceType":"module"}