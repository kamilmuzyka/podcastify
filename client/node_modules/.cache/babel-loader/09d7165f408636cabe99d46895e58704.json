{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{withRouter}from'react-router-dom';import{SEARCH_TYPES}from'../../../../constants';import Spotify from'../../../../models/Spotify';import extractId from'../../../../utils/extractId';import Details from'../../Details/Details';import Tiles from'../../Tiles/Tiles';import Tile from'../../Tiles/Tile/Tile';import WorkspaceLoading from'../../WorkspaceLoading/WorkspaceLoading';var Episode=function Episode(_ref){var location=_ref.location;var EPISODE_ID=extractId(location.pathname);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),details=_useState2[0],updateDetails=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),library=_useState4[0],updateLibrary=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),episodes=_useState6[0],updateEpisodes=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],updateIsLoading=_useState8[1];var handleEpisodeLike=function handleEpisodeLike(id){console.log(\"Episode added to the library [\".concat(id,\"]\"));};var handleEpisodeRemoval=function handleEpisodeRemoval(id){console.log(\"Episode removed from the library [\".concat(id,\"]\"));};var selectCorrespondingEpisodes=function selectCorrespondingEpisodes(currentEpisodeId,episodes){var episodesRangeBeginningIndex=0;var episodesToDisplay=4;var currentEpisodeIndex=episodes.findIndex(function(episode){return episode.id===currentEpisodeId;});if(currentEpisodeIndex!==-1&&currentEpisodeIndex<episodes.length-1){episodesRangeBeginningIndex=currentEpisodeIndex;}return _toConsumableArray(episodes).splice(episodesRangeBeginningIndex+1,episodesToDisplay);};useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var episode,show,moreEpisodes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Spotify.getEpisodeDetails(EPISODE_ID);case 3:episode=_context.sent;_context.next=6;return Spotify.getShowDetails(episode.show.id);case 6:show=_context.sent;moreEpisodes=selectCorrespondingEpisodes(EPISODE_ID,show.episodes.items);updateDetails({id:EPISODE_ID,name:episode.name,description:episode.description,external:episode.external_urls.spotify,type:SEARCH_TYPES.episode,image:episode.images[1].url,showName:episode.show.name,showId:episode.show.id,releaseDate:episode.release_date,duration:episode.duration_ms,episodes:show.episodes.items});updateLibrary({inLibrary:false,addToLibraryText:'Like',removeFromLibraryText:'Remove',addToLibrary:function addToLibrary(){return handleEpisodeLike(EPISODE_ID);},removeFromLibrary:function removeFromLibrary(){return handleEpisodeRemoval(EPISODE_ID);}});updateEpisodes(moreEpisodes);updateIsLoading(false);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);throw new Error(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}))();},[EPISODE_ID]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Details,{details:details,library:library}),/*#__PURE__*/React.createElement(Tiles,{title:\"More episodes\"},episodes?episodes.map(function(episode){return/*#__PURE__*/React.createElement(Tile,{key:episode.id,id:episode.id,title:episode.name,description:episode.description,image:episode.images[1].url,type:SEARCH_TYPES.episode});}):null),/*#__PURE__*/React.createElement(WorkspaceLoading,{loading:isLoading.toString()}));};export default withRouter(Episode);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js"],"names":["React","useState","useEffect","withRouter","SEARCH_TYPES","Spotify","extractId","Details","Tiles","Tile","WorkspaceLoading","Episode","location","EPISODE_ID","pathname","details","updateDetails","library","updateLibrary","episodes","updateEpisodes","isLoading","updateIsLoading","handleEpisodeLike","id","console","log","handleEpisodeRemoval","selectCorrespondingEpisodes","currentEpisodeId","episodesRangeBeginningIndex","episodesToDisplay","currentEpisodeIndex","findIndex","episode","length","splice","getEpisodeDetails","getShowDetails","show","moreEpisodes","items","name","description","external","external_urls","spotify","type","image","images","url","showName","showId","releaseDate","release_date","duration","duration_ms","inLibrary","addToLibraryText","removeFromLibraryText","addToLibrary","removeFromLibrary","Error","map","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport Details from '../../Details/Details';\nimport Tiles from '../../Tiles/Tiles';\nimport Tile from '../../Tiles/Tile/Tile';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\n\nconst Episode = ({ location }) => {\n    const EPISODE_ID = extractId(location.pathname);\n    const [details, updateDetails] = useState({});\n    const [library, updateLibrary] = useState({});\n    const [episodes, updateEpisodes] = useState([]);\n    const [isLoading, updateIsLoading] = useState(true);\n\n    const handleEpisodeLike = (id) => {\n        console.log(`Episode added to the library [${id}]`);\n    };\n\n    const handleEpisodeRemoval = (id) => {\n        console.log(`Episode removed from the library [${id}]`);\n    };\n\n    const selectCorrespondingEpisodes = (currentEpisodeId, episodes) => {\n        let episodesRangeBeginningIndex = 0;\n        const episodesToDisplay = 4;\n        const currentEpisodeIndex = episodes\n            .findIndex(episode => episode.id === currentEpisodeId);\n\n        if (currentEpisodeIndex !== -1 && currentEpisodeIndex < episodes.length - 1) {\n            episodesRangeBeginningIndex = currentEpisodeIndex;\n        }\n\n        return [...episodes]\n            .splice(episodesRangeBeginningIndex + 1, episodesToDisplay);\n    }\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const episode = await Spotify.getEpisodeDetails(EPISODE_ID);\n                const show = await Spotify.getShowDetails(episode.show.id);\n                const moreEpisodes = selectCorrespondingEpisodes(EPISODE_ID, show.episodes.items);\n                updateDetails({\n                    id: EPISODE_ID,\n                    name: episode.name,\n                    description: episode.description,\n                    external: episode.external_urls.spotify,\n                    type: SEARCH_TYPES.episode,\n                    image: episode.images[1].url,\n                    showName: episode.show.name,\n                    showId: episode.show.id,\n                    releaseDate: episode.release_date,\n                    duration: episode.duration_ms,\n                    episodes: show.episodes.items\n                });\n                updateLibrary({\n                    inLibrary: false,\n                    addToLibraryText: 'Like',\n                    removeFromLibraryText: 'Remove',\n                    addToLibrary: () => handleEpisodeLike(EPISODE_ID),\n                    removeFromLibrary: () => handleEpisodeRemoval(EPISODE_ID)\n                });\n                updateEpisodes(moreEpisodes);\n                updateIsLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, [EPISODE_ID]);\n\n    return (\n        <>\n            <Details details={details} library={library}/>\n            <Tiles title=\"More episodes\">\n                { episodes ?\n                    episodes.map(episode => {\n                        return <Tile\n                            key={episode.id}\n                            id={episode.id}\n                            title={episode.name}\n                            description={episode.description}\n                            image={episode.images[1].url}\n                            type={SEARCH_TYPES.episode} />\n                }) : null}\n            </Tiles>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </>\n    );\n}\n\nexport default withRouter(Episode);"]},"metadata":{},"sourceType":"module"}