{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport Details from '../../Details/Details';\nimport Tiles from '../../Tiles/Tiles';\nimport Tile from '../../Tiles/Tile/Tile';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\n\nconst Episode = ({\n  location\n}) => {\n  const [isLoading, updateIsLoading] = useState(true);\n  const [details, updateDetails] = useState({});\n  const [episodes, updateEpisodes] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const path = location.pathname;\n      const episodeId = extractId(path);\n\n      try {\n        const episode = await Spotify.getEpisodeDetails(episodeId);\n        updateDetails({\n          name: episode.name,\n          description: episode.description,\n          external: episode.external_urls.spotify,\n          type: SEARCH_TYPES.episode,\n          showName: episode.show.name,\n          showId: episode.show.id,\n          releaseDate: episode.release_date,\n          duration: episode.duration_ms\n        });\n        const show = await Spotify.getShowDetails(episode.show.id);\n        const episodesToDisplay = 4;\n        const episodeIndex = show.episodes.items.findIndex(episode => episode.id === 900);\n        let episodesRangeOrigin = 0;\n        console.log(episodeIndex); // if(episodeIndex !=== -1) {\n        // }\n\n        const moreEpisodes = show.episodes.items.filter(episode => episode.id !== episodeId).splice(0, episodesToDisplay).reverse();\n        updateEpisodes(moreEpisodes);\n        updateIsLoading(false);\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, [location.pathname]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    payload: details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tiles, {\n    title: \"More episodes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, episodes ? episodes.map(episode => {\n    return /*#__PURE__*/React.createElement(Tile, {\n      key: episode.id,\n      id: episode.id,\n      title: episode.name,\n      description: episode.description,\n      image: episode.images[1].url,\n      type: SEARCH_TYPES.episode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }\n    });\n  }) : null), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n    loading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Episode);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/Episode/Episode.js"],"names":["React","useState","useEffect","Fragment","withRouter","SEARCH_TYPES","Spotify","extractId","Details","Tiles","Tile","WorkspaceLoading","Episode","location","isLoading","updateIsLoading","details","updateDetails","episodes","updateEpisodes","path","pathname","episodeId","episode","getEpisodeDetails","name","description","external","external_urls","spotify","type","showName","show","showId","id","releaseDate","release_date","duration","duration_ms","getShowDetails","episodesToDisplay","episodeIndex","items","findIndex","episodesRangeOrigin","console","log","moreEpisodes","filter","splice","reverse","err","Error","map","images","url","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport Details from '../../Details/Details';\nimport Tiles from '../../Tiles/Tiles';\nimport Tile from '../../Tiles/Tile/Tile';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\n\nconst Episode = ({ location }) => {\n    const [isLoading, updateIsLoading] = useState(true);\n    const [details, updateDetails] = useState({});\n    const [episodes, updateEpisodes] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const path = location.pathname;\n            const episodeId = extractId(path);\n            try {\n                const episode = await Spotify.getEpisodeDetails(episodeId);\n                updateDetails({\n                    name: episode.name,\n                    description: episode.description,\n                    external: episode.external_urls.spotify,\n                    type: SEARCH_TYPES.episode,\n                    showName: episode.show.name,\n                    showId: episode.show.id,\n                    releaseDate: episode.release_date,\n                    duration: episode.duration_ms\n                });\n                const show = await Spotify.getShowDetails(episode.show.id);\n                const episodesToDisplay = 4;\n                const episodeIndex = show.episodes.items\n                    .findIndex(episode => episode.id === 900);\n                let episodesRangeOrigin = 0;\n\n                console.log(episodeIndex);\n                // if(episodeIndex !=== -1) {\n\n                // }\n\n                const moreEpisodes = show.episodes.items\n                    .filter(episode => episode.id !== episodeId)\n                    .splice(0, episodesToDisplay)\n                    .reverse();\n                updateEpisodes(moreEpisodes);\n                updateIsLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, [location.pathname]);\n\n    return (\n        <Fragment>\n            <Details payload={details}/>\n            <Tiles title=\"More episodes\">\n                { episodes ?\n                    episodes.map(episode => {\n                        return <Tile\n                            key={episode.id}\n                            id={episode.id}\n                            title={episode.name}\n                            description={episode.description}\n                            image={episode.images[1].url}\n                            type={SEARCH_TYPES.episode} />\n                }) : null}\n            </Tiles>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nexport default withRouter(Episode);"]},"metadata":{},"sourceType":"module"}