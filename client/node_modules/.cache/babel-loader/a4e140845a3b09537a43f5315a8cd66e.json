{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Spotify=/*#__PURE__*/function(){function Spotify(){_classCallCheck(this,Spotify);}_createClass(Spotify,null,[{key:\"retrieveAccessToken\",value:function retrieveAccessToken(){var access=localStorage.getItem('access');if(!access){throw new Error('No access token found');}var _JSON$parse=JSON.parse(access),token=_JSON$parse.token;return token;}},{key:\"getSearchResults\",value:function(){var _getSearchResults=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(query){var token,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=this.retrieveAccessToken();_context.prev=1;_context.next=4;return fetch(\"https://api.spotify.com/v1/search?q=\".concat(query,\"&type=show,episode&limit=50\"),{headers:{'Authorization':'Bearer '+token}});case 4:response=_context.sent;_context.next=7;return response.json();case 7:return _context.abrupt(\"return\",_context.sent);case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);throw new Error(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,this,[[1,10]]);}));function getSearchResults(_x){return _getSearchResults.apply(this,arguments);}return getSearchResults;}()},{key:\"getShowDetails\",value:function(){var _getShowDetails=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var token,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:token=this.retrieveAccessToken();_context2.prev=1;_context2.next=4;return fetch(\"https://api.spotify.com/v1/shows/\".concat(id),{headers:{'Authorization':'Bearer '+token}});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:return _context2.abrupt(\"return\",_context2.sent);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);throw new Error(_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,this,[[1,10]]);}));function getShowDetails(_x2){return _getShowDetails.apply(this,arguments);}return getShowDetails;}()},{key:\"getEpisodeDetails\",value:function(){var _getEpisodeDetails=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var token,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:token=this.retrieveAccessToken();_context3.prev=1;_context3.next=4;return fetch(\"https://api.spotify.com/v1/episodes/\".concat(id),{headers:{'Authorization':'Bearer '+token}});case 4:response=_context3.sent;_context3.next=7;return response.json();case 7:return _context3.abrupt(\"return\",_context3.sent);case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](1);throw new Error(_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,this,[[1,10]]);}));function getEpisodeDetails(_x3){return _getEpisodeDetails.apply(this,arguments);}return getEpisodeDetails;}()},{key:\"getUserProfile\",value:function(){var _getUserProfile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var token,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:token=this.retrieveAccessToken();_context4.prev=1;_context4.next=4;return fetch(\"https://api.spotify.com/v1/me\",{headers:{'Authorization':'Bearer '+token}});case 4:response=_context4.sent;_context4.next=7;return response.json();case 7:return _context4.abrupt(\"return\",_context4.sent);case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](1);throw new Error(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,this,[[1,10]]);}));function getUserProfile(){return _getUserProfile.apply(this,arguments);}return getUserProfile;}()},{key:\"getUserShows\",value:function(){var _getUserShows=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var token,response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:token=this.retrieveAccessToken();_context5.prev=1;_context5.next=4;return fetch(\"https://api.spotify.com/v1/me/shows?limit=50\",{headers:{'Authorization':'Bearer '+token}});case 4:response=_context5.sent;_context5.next=7;return response.json();case 7:return _context5.abrupt(\"return\",_context5.sent);case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](1);throw new Error(_context5.t0);case 13:case\"end\":return _context5.stop();}}},_callee5,this,[[1,10]]);}));function getUserShows(){return _getUserShows.apply(this,arguments);}return getUserShows;}()},{key:\"checkUserShow\",value:function(){var _checkUserShow=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id){var token,response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:token=this.retrieveAccessToken();_context6.prev=1;_context6.next=4;return fetch(\"https://api.spotify.com/v1/me/shows/contains?ids=\".concat(id),{headers:{'Authorization':'Bearer '+token}});case 4:response=_context6.sent;_context6.next=7;return response.json();case 7:return _context6.abrupt(\"return\",_context6.sent);case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](1);throw new Error(_context6.t0);case 13:case\"end\":return _context6.stop();}}},_callee6,this,[[1,10]]);}));function checkUserShow(_x4){return _checkUserShow.apply(this,arguments);}return checkUserShow;}()},{key:\"saveUserShow\",value:function(){var _saveUserShow=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id){var token;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:token=this.retrieveAccessToken();_context7.prev=1;fetch(\"https://api.spotify.com/v1/me/shows?ids=\".concat(id),{headers:{'Authorization':'Bearer '+token},method:'PUT'});_context7.next=8;break;case 5:_context7.prev=5;_context7.t0=_context7[\"catch\"](1);throw new Error(_context7.t0);case 8:case\"end\":return _context7.stop();}}},_callee7,this,[[1,5]]);}));function saveUserShow(_x5){return _saveUserShow.apply(this,arguments);}return saveUserShow;}()},{key:\"removeUserShow\",value:function(){var _removeUserShow=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id){var token;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:token=this.retrieveAccessToken();_context8.prev=1;fetch(\"https://api.spotify.com/v1/me/shows?ids=\".concat(id),{headers:{'Authorization':'Bearer '+token},method:'DELETE'});_context8.next=8;break;case 5:_context8.prev=5;_context8.t0=_context8[\"catch\"](1);throw new Error(_context8.t0);case 8:case\"end\":return _context8.stop();}}},_callee8,this,[[1,5]]);}));function removeUserShow(_x6){return _removeUserShow.apply(this,arguments);}return removeUserShow;}()}]);return Spotify;}();export default Spotify;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/models/Spotify.js"],"names":["Spotify","access","localStorage","getItem","Error","JSON","parse","token","query","retrieveAccessToken","fetch","headers","response","json","id","method"],"mappings":"knBAAMA,CAAAA,O,qKAC2B,CACzB,GAAMC,CAAAA,MAAM,CAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf,CACA,GAAI,CAACF,MAAL,CAAa,CACT,KAAM,IAAIG,CAAAA,KAAJ,CAAU,uBAAV,CAAN,CACH,CAJwB,gBAOrBC,IAAI,CAACC,KAAL,CAAWL,MAAX,CAPqB,CAMrBM,KANqB,aAMrBA,KANqB,CAQzB,MAAOA,CAAAA,KAAP,CACH,C,0IAE6BC,K,qIACpBD,K,CAAQ,KAAKE,mBAAL,E,uCAEaC,CAAAA,KAAK,+CAAwCF,KAAxC,gCAA4E,CACpGG,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD2F,CAA5E,C,QAAtBK,Q,qCAKOA,CAAAA,QAAQ,CAACC,IAAT,E,sHAEP,IAAIT,CAAAA,KAAJ,a,yTAIcU,E,yIAClBP,K,CAAQ,KAAKE,mBAAL,E,yCAEaC,CAAAA,KAAK,4CAAqCI,EAArC,EAA2C,CACnEH,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD0D,CAA3C,C,QAAtBK,Q,uCAKOA,CAAAA,QAAQ,CAACC,IAAT,E,2HAEP,IAAIT,CAAAA,KAAJ,c,4TAIiBU,E,yIACrBP,K,CAAQ,KAAKE,mBAAL,E,yCAEaC,CAAAA,KAAK,+CAAwCI,EAAxC,EAA8C,CACtEH,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD6D,CAA9C,C,QAAtBK,Q,uCAKOA,CAAAA,QAAQ,CAACC,IAAT,E,2HAEP,IAAIT,CAAAA,KAAJ,c,wcAKJG,K,CAAQ,KAAKE,mBAAL,E,yCAEaC,CAAAA,KAAK,iCAAkC,CAC1DC,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CADiD,CAAlC,C,QAAtBK,Q,uCAKOA,CAAAA,QAAQ,CAACC,IAAT,E,2HAEP,IAAIT,CAAAA,KAAJ,c,wbAKJG,K,CAAQ,KAAKE,mBAAL,E,yCAEaC,CAAAA,KAAK,gDAAiD,CACzEC,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CADgE,CAAjD,C,QAAtBK,Q,uCAKOA,CAAAA,QAAQ,CAACC,IAAT,E,2HAEP,IAAIT,CAAAA,KAAJ,c,2SAIaU,E,yIACjBP,K,CAAQ,KAAKE,mBAAL,E,yCAEaC,CAAAA,KAAK,4DAAqDI,EAArD,EAA2D,CACnFH,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD0E,CAA3D,C,QAAtBK,Q,uCAKOA,CAAAA,QAAQ,CAACC,IAAT,E,2HAEP,IAAIT,CAAAA,KAAJ,c,+SAIYU,E,gIAChBP,K,CAAQ,KAAKE,mBAAL,E,kBAEVC,KAAK,mDAA4CI,EAA5C,EAAkD,CACnDH,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD0C,CAInDQ,MAAM,CAAE,KAJ2C,CAAlD,CAAL,C,uFAOM,IAAIX,CAAAA,KAAJ,c,8SAIcU,E,gIAClBP,K,CAAQ,KAAKE,mBAAL,E,kBAEVC,KAAK,mDAA4CI,EAA5C,EAAkD,CACnDH,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD0C,CAInDQ,MAAM,CAAE,QAJ2C,CAAlD,CAAL,C,uFAOM,IAAIX,CAAAA,KAAJ,c,oMAKlB,cAAeJ,CAAAA,OAAf","sourcesContent":["class Spotify {\n    static retrieveAccessToken() {\n        const access = localStorage.getItem('access');\n        if (!access) {\n            throw new Error('No access token found');\n        }\n        const {\n            token\n        } = JSON.parse(access);\n        return token;\n    }\n\n    static async getSearchResults(query) {\n        const token = this.retrieveAccessToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/search?q=${query}&type=show,episode&limit=50`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await response.json();\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async getShowDetails(id) {\n        const token = this.retrieveAccessToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/shows/${id}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await response.json();\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async getEpisodeDetails(id) {\n        const token = this.retrieveAccessToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/episodes/${id}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await response.json();\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async getUserProfile() {\n        const token = this.retrieveAccessToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/me`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await response.json();\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async getUserShows() {\n        const token = this.retrieveAccessToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/me/shows?limit=50`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await response.json();\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async checkUserShow(id) {\n        const token = this.retrieveAccessToken();\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/me/shows/contains?ids=${id}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await response.json();\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async saveUserShow(id) {\n        const token = this.retrieveAccessToken();\n        try {\n            fetch(`https://api.spotify.com/v1/me/shows?ids=${id}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                },\n                method: 'PUT'\n            });\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n\n    static async removeUserShow(id) {\n        const token = this.retrieveAccessToken();\n        try {\n            fetch(`https://api.spotify.com/v1/me/shows?ids=${id}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                },\n                method: 'DELETE'\n            });\n        } catch (err) {\n            throw new Error(err);\n        }\n    }\n}\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}