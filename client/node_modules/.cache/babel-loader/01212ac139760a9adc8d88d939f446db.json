{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/contexts/PlayerContextProvider.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nexport const PlayerContext = createContext();\n\nconst PlayerContextProvider = props => {\n  const [queue, updateQueue] = useState([]);\n  const [queueHead, updateQueueHead] = useState(0);\n  const [currentEpisode, updateCurrentEpisode] = useState();\n\n  const loadQueue = (currentId, newQueue) => {\n    const currentIndex = newQueue.findIndex(episode => episode.id === currentId);\n    updateQueue(newQueue);\n    updateQueueHead(currentIndex);\n    updateCurrentEpisode(newQueue[currentIndex]);\n  };\n\n  const unshiftQueueHead = () => {\n    updateQueueHead(prev => prev--);\n  };\n\n  const shiftQueueHead = () => {\n    updateQueueHead(prev => prev++);\n  };\n\n  return /*#__PURE__*/React.createElement(PlayerContext.Provider, {\n    value: {\n      currentEpisode,\n      loadQueue,\n      unshiftQueueHead,\n      shiftQueueHead\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default PlayerContextProvider;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/contexts/PlayerContextProvider.js"],"names":["React","createContext","useState","useEffect","PlayerContext","PlayerContextProvider","props","queue","updateQueue","queueHead","updateQueueHead","currentEpisode","updateCurrentEpisode","loadQueue","currentId","newQueue","currentIndex","findIndex","episode","id","unshiftQueueHead","prev","shiftQueueHead","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,aAAa,GAAGH,aAAa,EAAnC;;AAEP,MAAMI,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACO,SAAD,EAAYC,eAAZ,IAA+BR,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACS,cAAD,EAAiBC,oBAAjB,IAAyCV,QAAQ,EAAvD;;AAEA,QAAMW,SAAS,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACzC,UAAMC,YAAY,GAAGD,QAAQ,CAACE,SAAT,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,SAA7C,CAArB;AAEAN,IAAAA,WAAW,CAACO,QAAD,CAAX;AACAL,IAAAA,eAAe,CAACM,YAAD,CAAf;AACAJ,IAAAA,oBAAoB,CAACG,QAAQ,CAACC,YAAD,CAAT,CAApB;AACD,GAND;;AAQA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BV,IAAAA,eAAe,CAACW,IAAI,IAAIA,IAAI,EAAb,CAAf;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BZ,IAAAA,eAAe,CAACW,IAAI,IAAIA,IAAI,EAAb,CAAf;AACD,GAFD;;AAIA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3BV,MAAAA,cAD2B;AAE3BE,MAAAA,SAF2B;AAG3BO,MAAAA,gBAH2B;AAI3BE,MAAAA;AAJ2B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKhB,KAAK,CAACiB,QANX,CADJ;AAUH,CA/BD;;AAiCA,eAAelB,qBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const PlayerContext = createContext();\n\nconst PlayerContextProvider = (props) => {\n    const [queue, updateQueue] = useState([]);\n    const [queueHead, updateQueueHead] = useState(0);\n    const [currentEpisode, updateCurrentEpisode] = useState();\n\n    const loadQueue = (currentId, newQueue) => {\n      const currentIndex = newQueue.findIndex(episode => episode.id === currentId);\n\n      updateQueue(newQueue);\n      updateQueueHead(currentIndex);\n      updateCurrentEpisode(newQueue[currentIndex]);\n    }\n\n    const unshiftQueueHead = () => {\n      updateQueueHead(prev => prev--);\n    }\n\n    const shiftQueueHead = () => {\n      updateQueueHead(prev => prev++);\n    }\n\n    return (\n        <PlayerContext.Provider value={{\n            currentEpisode,\n            loadQueue,\n            unshiftQueueHead,\n            shiftQueueHead\n        }}>\n            {props.children}\n        </PlayerContext.Provider>\n    );\n}\n\nexport default PlayerContextProvider;"]},"metadata":{},"sourceType":"module"}