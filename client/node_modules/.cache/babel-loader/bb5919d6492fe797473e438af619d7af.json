{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Shows/Show/Show.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\nimport Details from '../../Details/Details';\nimport EpisodesList from '../../Episodes/EpisodesList/EpisodesList';\n\nconst Show = ({\n  location\n}) => {\n  const [path, updatePath] = useState(null);\n  const [details, updateDetails] = useState({});\n  const [library, updateLibrary] = useState({});\n  const [isFollowed, updateIsFollowed] = useState(null);\n  const [isLoading, updateIsLoading] = useState(true);\n\n  const handleShowFollow = id => {\n    Spotify.saveUserShow(id);\n    updateIsFollowed(true);\n  };\n\n  const handleShowUnfollow = id => {\n    Spotify.removeUserShow(id);\n    updateIsFollowed(false);\n  };\n\n  useEffect(() => {\n    const path = location.pathname;\n    updatePath(path);\n  }, [location.pathname]);\n  useEffect(() => {\n    (async () => {\n      // const path = location.pathname;\n      console.log(path);\n      const showId = extractId(path);\n\n      try {\n        const inLibrary = await Spotify.checkUserShow(showId);\n        updateLibrary({\n          inLibrary,\n          addToLibrary: () => handleShowFollow(showId),\n          removeFromLibrary: () => handleShowUnfollow(showId)\n        });\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, [isFollowed]);\n  useEffect(() => {\n    (async () => {\n      // const path = location.pathname;\n      const showId = extractId(path);\n\n      try {\n        const show = await Spotify.getShowDetails(showId);\n        updateDetails({\n          name: show.name,\n          showId: show.id,\n          description: show.description,\n          external: show.external_urls.spotify,\n          type: SEARCH_TYPES.show,\n          publisher: show.publisher,\n          image: show.images[1].url,\n          episodes: show.episodes\n        });\n        updateIsLoading(false);\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, [location.pathname]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    payload: details,\n    library: library,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EpisodesList, {\n    episodes: details.episodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n    loading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Show);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Shows/Show/Show.js"],"names":["React","useState","useEffect","Fragment","withRouter","SEARCH_TYPES","Spotify","extractId","WorkspaceLoading","Details","EpisodesList","Show","location","path","updatePath","details","updateDetails","library","updateLibrary","isFollowed","updateIsFollowed","isLoading","updateIsLoading","handleShowFollow","id","saveUserShow","handleShowUnfollow","removeUserShow","pathname","console","log","showId","inLibrary","checkUserShow","addToLibrary","removeFromLibrary","err","Error","show","getShowDetails","name","description","external","external_urls","spotify","type","publisher","image","images","url","episodes","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\nimport Details from '../../Details/Details';\nimport EpisodesList from '../../Episodes/EpisodesList/EpisodesList';\n\nconst Show = ({ location }) => {\n    const [path, updatePath] = useState(null);\n    const [details, updateDetails] = useState({});\n    const [library, updateLibrary] = useState({});\n    const [isFollowed, updateIsFollowed] = useState(null);\n    const [isLoading, updateIsLoading] = useState(true);\n\n    const handleShowFollow = (id) => {\n        Spotify.saveUserShow(id);\n        updateIsFollowed(true);\n    };\n\n    const handleShowUnfollow = (id) => {\n        Spotify.removeUserShow(id);\n        updateIsFollowed(false);\n    };\n\n    useEffect(() => {\n        const path = location.pathname;\n        updatePath(path);\n    }, [location.pathname]);\n\n    useEffect(() => {\n        (async () => {\n            // const path = location.pathname;\n            console.log(path);\n            const showId = extractId(path);\n            try {\n                const inLibrary = await Spotify.checkUserShow(showId);\n                updateLibrary({\n                    inLibrary,\n                    addToLibrary: () => handleShowFollow(showId),\n                    removeFromLibrary: () => handleShowUnfollow(showId)\n                });\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, [isFollowed]);\n\n    useEffect(() => {\n        (async () => {\n            // const path = location.pathname;\n            const showId = extractId(path);\n            try {\n                const show = await Spotify.getShowDetails(showId);\n                updateDetails({\n                    name: show.name,\n                    showId: show.id,\n                    description: show.description,\n                    external: show.external_urls.spotify,\n                    type: SEARCH_TYPES.show,\n                    publisher: show.publisher,\n                    image: show.images[1].url,\n                    episodes: show.episodes,\n                });\n                updateIsLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, [location.pathname]);\n\n    return (\n        <Fragment>\n            <Details payload={details} library={library}/>\n            <EpisodesList episodes={details.episodes}/>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nexport default withRouter(Show);"]},"metadata":{},"sourceType":"module"}