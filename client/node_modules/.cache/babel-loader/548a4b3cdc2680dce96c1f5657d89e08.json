{"ast":null,"code":"import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SEARCH_TYPES } from '../../../constants';\nimport capitalizeString from '../../../utils/capitalizeString';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport Button from '../../../UI/Button/Button';\nconst Image = styled.img`\n    display: block;\n    max-width: 250px;\n    object-fit: contain;\n    object-position: top;\n`;\nconst Header = styled.header``;\nconst Lead = styled.h2`\n    position: relative;\n    font-size: 2em;\n    line-height: 1.25;\n    color: ${({\n  theme\n}) => theme.colors.positive};\n\n    @media (min-width: 500px) {\n        max-width: calc(0.5em * 50);\n    }\n`;\nconst Label = styled.p`\n    font-size: ${({\n  theme\n}) => theme.typography.small};\n    font-weight: 400;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Type = styled(Label)`\n    margin: 0.75em 0 0.25em 0;\n\n    @media (min-width: 1024px) {\n        margin: 0 0 0.25em 0;\n    }\n`;\nconst Publisher = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\nconst Description = styled(Accordion)`\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Controls = styled.div`\n    margin-top: 0.75em;\n`;\nconst PlayButton = styled(Button)`\n    margin-left: 0.75em;\n`;\nconst Links = styled.div`\n    margin-top: 0.75em;\n    @media (min-width: 500px) {\n        display: inline-block;\n        margin-top: 0;\n        margin-left: 0.75em;\n    }\n`;\nconst ExternalLink = styled.a`\n    display: inline-block;\n    text-decoration: none;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst Split = styled.div`\n    @media (min-width: 1024px) {\n        display: flex;\n    }\n`;\nconst Content = styled.div`\n    @media (min-width: 1024px) {\n        margin-left: 3em;\n    }\n`;\n\nconst Details = props => {\n  console.log(props); // return (\n  //     <Fragment>\n  //         <Split>\n  //             <Image src={image} alt=\"\" />\n  //             <Content>\n  //                 <Header>\n  //                     <Type>\n  //                         {capitalizeString(type)}\n  //                     </Type>\n  //                     <Lead>{name}</Lead>\n  //                     <Publisher>\n  //                         By {publisher}\n  //                     </Publisher>\n  //                 </Header>\n  //                 <Description>{description}</Description>\n  //                 <Controls>\n  //                     <Button type=\"button\">\n  //                         {type === SEARCH_TYPES.show ? 'Follow' : 'Like'}\n  //                     </Button>\n  //                     <PlayButton type=\"button\" outline>\n  //                         Play\n  //                     </PlayButton>\n  //                     <Links>\n  //                         <ExternalLink href={external}>\n  //                             Listen on Spotify\n  //                         </ExternalLink>\n  //                     </Links>\n  //                 </Controls>\n  //             </Content>\n  //         </Split>\n  //     </Fragment>\n  // );\n};\n\nDetails.propTypes = {\n  type: PropTypes.oneOf([SEARCH_TYPES.show, SEARCH_TYPES.episode])\n};\nexport default Details;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/Details.js"],"names":["React","Fragment","styled","PropTypes","SEARCH_TYPES","capitalizeString","Accordion","Button","Image","img","Header","header","Lead","h2","theme","colors","positive","Label","p","typography","small","specific","Type","Publisher","Description","Controls","div","PlayButton","Links","ExternalLink","a","Split","Content","Details","props","console","log","propTypes","type","oneOf","show","episode"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,MAAMC,KAAK,GAAGN,MAAM,CAACO,GAAI;;;;;CAAzB;AAOA,MAAMC,MAAM,GAAGR,MAAM,CAACS,MAAO,EAA7B;AAEA,MAAMC,IAAI,GAAGV,MAAM,CAACW,EAAG;;;;aAIV,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,QAAS;;;;;CAJlD;AAWA,MAAMC,KAAK,GAAGf,MAAM,CAACgB,CAAE;iBACN,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,UAAN,CAAiBC,KAAM;;aAE1C,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaM,QAAS;CAHlD;AAMA,MAAMC,IAAI,GAAGpB,MAAM,CAACe,KAAD,CAAQ;;;;;;CAA3B;AAQA,MAAMM,SAAS,GAAGrB,MAAM,CAACe,KAAD,CAAQ;;CAAhC;AAIA,MAAMO,WAAW,GAAGtB,MAAM,CAACI,SAAD,CAAY;aACzB,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaM,QAAS;CADlD;AAIA,MAAMI,QAAQ,GAAGvB,MAAM,CAACwB,GAAI;;CAA5B;AAIA,MAAMC,UAAU,GAAGzB,MAAM,CAACK,MAAD,CAAS;;CAAlC;AAIA,MAAMqB,KAAK,GAAG1B,MAAM,CAACwB,GAAI;;;;;;;CAAzB;AASA,MAAMG,YAAY,GAAG3B,MAAM,CAAC4B,CAAE;;;aAGjB,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaM,QAAS;;;;;CAHlD;AAUA,MAAMU,KAAK,GAAG7B,MAAM,CAACwB,GAAI;;;;CAAzB;AAMA,MAAMM,OAAO,GAAG9B,MAAM,CAACwB,GAAI;;;;CAA3B;;AAMA,MAAMO,OAAO,GAAIC,KAAD,IAAW;AAEvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CArCD;;AAuCAD,OAAO,CAACI,SAAR,GAAoB;AAChBC,EAAAA,IAAI,EAAEnC,SAAS,CAACoC,KAAV,CAAgB,CAACnC,YAAY,CAACoC,IAAd,EAAoBpC,YAAY,CAACqC,OAAjC,CAAhB;AADU,CAApB;AAIA,eAAeR,OAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SEARCH_TYPES } from '../../../constants';\nimport capitalizeString from '../../../utils/capitalizeString';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport Button from '../../../UI/Button/Button';\n\nconst Image = styled.img`\n    display: block;\n    max-width: 250px;\n    object-fit: contain;\n    object-position: top;\n`;\n\nconst Header = styled.header``;\n\nconst Lead = styled.h2`\n    position: relative;\n    font-size: 2em;\n    line-height: 1.25;\n    color: ${({ theme }) => theme.colors.positive};\n\n    @media (min-width: 500px) {\n        max-width: calc(0.5em * 50);\n    }\n`;\n\nconst Label = styled.p`\n    font-size: ${({ theme }) => theme.typography.small};\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Type = styled(Label)`\n    margin: 0.75em 0 0.25em 0;\n\n    @media (min-width: 1024px) {\n        margin: 0 0 0.25em 0;\n    }\n`;\n\nconst Publisher = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\n\nconst Description = styled(Accordion)`\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Controls = styled.div`\n    margin-top: 0.75em;\n`;\n\nconst PlayButton = styled(Button)`\n    margin-left: 0.75em;\n`;\n\nconst Links = styled.div`\n    margin-top: 0.75em;\n    @media (min-width: 500px) {\n        display: inline-block;\n        margin-top: 0;\n        margin-left: 0.75em;\n    }\n`;\n\nconst ExternalLink = styled.a`\n    display: inline-block;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.specific};\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst Split = styled.div`\n    @media (min-width: 1024px) {\n        display: flex;\n    }\n`;\n\nconst Content = styled.div`\n    @media (min-width: 1024px) {\n        margin-left: 3em;\n    }\n`;\n\nconst Details = (props) => {\n\n    console.log(props);\n    // return (\n    //     <Fragment>\n    //         <Split>\n    //             <Image src={image} alt=\"\" />\n    //             <Content>\n    //                 <Header>\n    //                     <Type>\n    //                         {capitalizeString(type)}\n    //                     </Type>\n\n    //                     <Lead>{name}</Lead>\n\n    //                     <Publisher>\n    //                         By {publisher}\n    //                     </Publisher>\n    //                 </Header>\n    //                 <Description>{description}</Description>\n    //                 <Controls>\n    //                     <Button type=\"button\">\n    //                         {type === SEARCH_TYPES.show ? 'Follow' : 'Like'}\n    //                     </Button>\n    //                     <PlayButton type=\"button\" outline>\n    //                         Play\n    //                     </PlayButton>\n    //                     <Links>\n    //                         <ExternalLink href={external}>\n    //                             Listen on Spotify\n    //                         </ExternalLink>\n    //                     </Links>\n    //                 </Controls>\n    //             </Content>\n    //         </Split>\n    //     </Fragment>\n    // );\n}\n\nDetails.propTypes = {\n    type: PropTypes.oneOf([SEARCH_TYPES.show, SEARCH_TYPES.episode])\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}