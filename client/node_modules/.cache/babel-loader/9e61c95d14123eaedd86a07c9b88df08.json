{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/Details.js\";\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SEARCH_TYPES } from '../../../constants';\nimport capitalizeString from '../../../utils/capitalizeString';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport Button from '../../../UI/Button/Button';\nconst Image = styled.img`\n    display: block;\n    max-width: 250px;\n    object-fit: contain;\n    object-position: top;\n`;\nconst Header = styled.header``;\nconst Lead = styled.h2`\n    position: relative;\n    font-size: 2em;\n    line-height: 1.25;\n    color: ${({\n  theme\n}) => theme.colors.positive};\n\n    @media (min-width: 500px) {\n        max-width: calc(0.5em * 50);\n    }\n`;\nconst Label = styled.p`\n    font-size: ${({\n  theme\n}) => theme.typography.small};\n    font-weight: 400;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Type = styled(Label)`\n    margin: 0.75em 0 0.25em 0;\n\n    @media (min-width: 1024px) {\n        margin: 0 0 0.25em 0;\n    }\n`;\nconst Caption = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\nconst Description = styled(Accordion)`\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\nconst Controls = styled.div`\n    margin-top: 0.75em;\n`;\nconst PlayButton = styled(Button)`\n    margin-left: 0.75em;\n`;\nconst Links = styled.div`\n    margin-top: 0.75em;\n    @media (min-width: 500px) {\n        display: inline-block;\n        margin-top: 0;\n        margin-left: 0.75em;\n    }\n`;\nconst ExternalLink = styled.a`\n    display: inline-block;\n    text-decoration: none;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst Split = styled.div`\n    @media (min-width: 1024px) {\n        display: flex;\n    }\n`;\nconst Content = styled.div`\n    @media (min-width: 1024px) {\n        margin-left: 3em;\n    }\n`;\n\nconst Details = ({\n  payload\n}) => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Split, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: payload.image ? payload.image : null,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Type, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, payload.type ? capitalizeString(payload.type) : null), /*#__PURE__*/React.createElement(Lead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, payload.name), /*#__PURE__*/React.createElement(Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, payload.type === SEARCH_TYPES.show ? `By ${payload.publisher}` : payload.showName + payload.showId)), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, payload.description), /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, payload.type === SEARCH_TYPES.show ? 'Follow' : 'Like'), /*#__PURE__*/React.createElement(PlayButton, {\n    type: \"button\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(Links, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    href: payload.external,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"Listen on Spotify\"))))));\n};\n\nDetails.propTypes = {\n  type: PropTypes.oneOf([SEARCH_TYPES.show, SEARCH_TYPES.episode])\n};\nexport default Details;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/Details.js"],"names":["React","Fragment","styled","PropTypes","SEARCH_TYPES","capitalizeString","Accordion","Button","Image","img","Header","header","Lead","h2","theme","colors","positive","Label","p","typography","small","specific","Type","Caption","Description","Controls","div","PlayButton","Links","ExternalLink","a","Split","Content","Details","payload","image","type","name","show","publisher","showName","showId","description","external","propTypes","oneOf","episode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,MAAMC,KAAK,GAAGN,MAAM,CAACO,GAAI;;;;;CAAzB;AAOA,MAAMC,MAAM,GAAGR,MAAM,CAACS,MAAO,EAA7B;AAEA,MAAMC,IAAI,GAAGV,MAAM,CAACW,EAAG;;;;aAIV,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,QAAS;;;;;CAJlD;AAWA,MAAMC,KAAK,GAAGf,MAAM,CAACgB,CAAE;iBACN,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,UAAN,CAAiBC,KAAM;;aAE1C,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaM,QAAS;CAHlD;AAMA,MAAMC,IAAI,GAAGpB,MAAM,CAACe,KAAD,CAAQ;;;;;;CAA3B;AAQA,MAAMM,OAAO,GAAGrB,MAAM,CAACe,KAAD,CAAQ;;CAA9B;AAIA,MAAMO,WAAW,GAAGtB,MAAM,CAACI,SAAD,CAAY;aACzB,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaM,QAAS;CADlD;AAIA,MAAMI,QAAQ,GAAGvB,MAAM,CAACwB,GAAI;;CAA5B;AAIA,MAAMC,UAAU,GAAGzB,MAAM,CAACK,MAAD,CAAS;;CAAlC;AAIA,MAAMqB,KAAK,GAAG1B,MAAM,CAACwB,GAAI;;;;;;;CAAzB;AASA,MAAMG,YAAY,GAAG3B,MAAM,CAAC4B,CAAE;;;aAGjB,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaM,QAAS;;;;;CAHlD;AAUA,MAAMU,KAAK,GAAG7B,MAAM,CAACwB,GAAI;;;;CAAzB;AAMA,MAAMM,OAAO,GAAG9B,MAAM,CAACwB,GAAI;;;;CAA3B;;AAMA,MAAMO,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACC,KAAxB,GAAgC,IAA5C;AAAkD,IAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,CAACE,IAAR,GAAe/B,gBAAgB,CAAC6B,OAAO,CAACE,IAAT,CAA/B,GAAgD,IADrD,CADJ,eAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACG,IADb,CAJJ,eAOI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OAAO,CAACE,IAAR,KAAiBhC,YAAY,CAACkC,IAA9B,GAAsC,MAAKJ,OAAO,CAACK,SAAU,EAA7D,GAAiEL,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACO,MADjG,CAPJ,CADJ,eAYI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OAAO,CAACQ,WADb,CAZJ,eAeI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,OAAO,CAACE,IAAR,KAAiBhC,YAAY,CAACkC,IAA9B,GAAqC,QAArC,GAAgD,MADrD,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,OAAO,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEJ,OAAO,CAACS,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAPJ,CAfJ,CAFJ,CADJ,CADJ;AAoCH,CArCD;;AAuCAV,OAAO,CAACW,SAAR,GAAoB;AAChBR,EAAAA,IAAI,EAAEjC,SAAS,CAAC0C,KAAV,CAAgB,CAACzC,YAAY,CAACkC,IAAd,EAAoBlC,YAAY,CAAC0C,OAAjC,CAAhB;AADU,CAApB;AAIA,eAAeb,OAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { SEARCH_TYPES } from '../../../constants';\nimport capitalizeString from '../../../utils/capitalizeString';\nimport Accordion from '../../../UI/Accordion/Accordion';\nimport Button from '../../../UI/Button/Button';\n\nconst Image = styled.img`\n    display: block;\n    max-width: 250px;\n    object-fit: contain;\n    object-position: top;\n`;\n\nconst Header = styled.header``;\n\nconst Lead = styled.h2`\n    position: relative;\n    font-size: 2em;\n    line-height: 1.25;\n    color: ${({ theme }) => theme.colors.positive};\n\n    @media (min-width: 500px) {\n        max-width: calc(0.5em * 50);\n    }\n`;\n\nconst Label = styled.p`\n    font-size: ${({ theme }) => theme.typography.small};\n    font-weight: 400;\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Type = styled(Label)`\n    margin: 0.75em 0 0.25em 0;\n\n    @media (min-width: 1024px) {\n        margin: 0 0 0.25em 0;\n    }\n`;\n\nconst Caption = styled(Label)`\n    margin: 0.25em 0 0.75em 0;\n`;\n\nconst Description = styled(Accordion)`\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nconst Controls = styled.div`\n    margin-top: 0.75em;\n`;\n\nconst PlayButton = styled(Button)`\n    margin-left: 0.75em;\n`;\n\nconst Links = styled.div`\n    margin-top: 0.75em;\n    @media (min-width: 500px) {\n        display: inline-block;\n        margin-top: 0;\n        margin-left: 0.75em;\n    }\n`;\n\nconst ExternalLink = styled.a`\n    display: inline-block;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.specific};\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst Split = styled.div`\n    @media (min-width: 1024px) {\n        display: flex;\n    }\n`;\n\nconst Content = styled.div`\n    @media (min-width: 1024px) {\n        margin-left: 3em;\n    }\n`;\n\nconst Details = ({ payload }) => {\n    return (\n        <Fragment>\n            <Split>\n                <Image src={payload.image ? payload.image : null} alt=\"\" />\n                <Content>\n                    <Header>\n                        <Type>\n                            {payload.type ? capitalizeString(payload.type) : null}\n                        </Type>\n                        <Lead>\n                            {payload.name}\n                        </Lead>\n                        <Caption>\n                            {payload.type === SEARCH_TYPES.show ? `By ${payload.publisher}` : payload.showName + payload.showId}\n                        </Caption>\n                    </Header>\n                    <Description>\n                        {payload.description}\n                    </Description>\n                    <Controls>\n                        <Button type=\"button\">\n                            {payload.type === SEARCH_TYPES.show ? 'Follow' : 'Like'}\n                        </Button>\n                        <PlayButton type=\"button\" outline>\n                            Play\n                        </PlayButton>\n                        <Links>\n                            <ExternalLink href={payload.external}>\n                                Listen on Spotify\n                            </ExternalLink>\n                        </Links>\n                    </Controls>\n                </Content>\n            </Split>\n        </Fragment>\n    );\n}\n\nDetails.propTypes = {\n    type: PropTypes.oneOf([SEARCH_TYPES.show, SEARCH_TYPES.episode])\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}