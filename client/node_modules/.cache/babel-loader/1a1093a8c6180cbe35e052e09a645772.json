{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/LibraryButton/LibraryButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../../../UI/Button/Button';\nimport Spotify from '../../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../../constants';\n\nconst LibraryButton = ({\n  type,\n  id\n}) => {\n  let text;\n\n  (async () => {\n    if (id) {\n      let inLibrary;\n\n      if (type === SEARCH_TYPES.show) {\n        inLibrary = await Spotify.checkUserShow(id);\n      }\n\n      if (inLibrary && type === SEARCH_TYPES.show) {\n        text = 'Unfollow';\n        return;\n      }\n\n      if (!inLibrary && type === SEARCH_TYPES.show) {\n        text = 'Follow';\n        return;\n      }\n\n      if (inLibrary && type === SEARCH_TYPES.episode) {\n        text = 'Remove';\n        return;\n      }\n\n      if (!inLibrary && type === SEARCH_TYPES.episode) {\n        text = 'Like';\n        return;\n      }\n    }\n  })();\n\n  console.log(text);\n  useEffect(() => {\n    (async () => {})();\n  }, [id]);\n\n  const handleShowFollow = id => {\n    Spotify.saveUserShow(id);\n  };\n\n  const handleShowUnfollow = id => {\n    Spotify.removeUserShow(id);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, text);\n};\n\nexport default LibraryButton;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/LibraryButton/LibraryButton.js"],"names":["React","useState","useEffect","Button","Spotify","SEARCH_TYPES","LibraryButton","type","id","text","inLibrary","show","checkUserShow","episode","console","log","handleShowFollow","saveUserShow","handleShowUnfollow","removeUserShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAkB;AACpC,MAAIC,IAAJ;;AAEA,GAAC,YAAY;AACT,QAAGD,EAAH,EAAO;AACH,UAAIE,SAAJ;;AAEA,UAAGH,IAAI,KAAKF,YAAY,CAACM,IAAzB,EAA+B;AAC3BD,QAAAA,SAAS,GAAG,MAAMN,OAAO,CAACQ,aAAR,CAAsBJ,EAAtB,CAAlB;AACH;;AAED,UAAGE,SAAS,IAAIH,IAAI,KAAKF,YAAY,CAACM,IAAtC,EAA4C;AACxCF,QAAAA,IAAI,GAAG,UAAP;AACA;AACH;;AAED,UAAG,CAACC,SAAD,IAAcH,IAAI,KAAKF,YAAY,CAACM,IAAvC,EAA6C;AACzCF,QAAAA,IAAI,GAAG,QAAP;AACA;AACH;;AAED,UAAGC,SAAS,IAAIH,IAAI,KAAKF,YAAY,CAACQ,OAAtC,EAA+C;AAC3CJ,QAAAA,IAAI,GAAG,QAAP;AACA;AACH;;AAED,UAAG,CAACC,SAAD,IAAcH,IAAI,KAAKF,YAAY,CAACQ,OAAvC,EAAgD;AAC5CJ,QAAAA,IAAI,GAAG,MAAP;AACA;AACH;AACJ;AACJ,GA5BD;;AA8BAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY,CAEZ,CAFD;AAGH,GAJQ,EAIN,CAACM,EAAD,CAJM,CAAT;;AAMA,QAAMQ,gBAAgB,GAAIR,EAAD,IAAQ;AAC7BJ,IAAAA,OAAO,CAACa,YAAR,CAAqBT,EAArB;AACH,GAFD;;AAIA,QAAMU,kBAAkB,GAAIV,EAAD,IAAQ;AAC/BJ,IAAAA,OAAO,CAACe,cAAR,CAAuBX,EAAvB;AACH,GAFD;;AAIA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IADL,CADJ;AAKH,CAtDD;;AAwDA,eAAeH,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '../../../../UI/Button/Button';\nimport Spotify from '../../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../../constants';\n\nconst LibraryButton = ({ type, id }) => {\n    let text;\n\n    (async () => {\n        if(id) {\n            let inLibrary;\n    \n            if(type === SEARCH_TYPES.show) {\n                inLibrary = await Spotify.checkUserShow(id);\n            }\n    \n            if(inLibrary && type === SEARCH_TYPES.show) {\n                text = 'Unfollow';\n                return;\n            }\n    \n            if(!inLibrary && type === SEARCH_TYPES.show) {\n                text = 'Follow';\n                return;\n            }\n    \n            if(inLibrary && type === SEARCH_TYPES.episode) {\n                text = 'Remove';\n                return;\n            }\n    \n            if(!inLibrary && type === SEARCH_TYPES.episode) {\n                text = 'Like';\n                return;\n            }\n        }\n    })();\n\n    console.log(text);\n\n    useEffect(() => {\n        (async () => {\n            \n        })();\n    }, [id]);\n\n    const handleShowFollow = (id) => {\n        Spotify.saveUserShow(id);\n    };\n\n    const handleShowUnfollow = (id) => {\n        Spotify.removeUserShow(id);\n    };\n\n    return (\n        <Button type=\"button\" outline>\n            {text}\n        </Button>\n    );\n}\n\nexport default LibraryButton;"]},"metadata":{},"sourceType":"module"}