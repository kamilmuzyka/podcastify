{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/UI/Accordion/Accordion.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Element = styled.p`\n    display: inline-block;\n    word-wrap: break-word;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-height: 3.75em;\n    line-height: 1.25em;\n`;\n\nconst Accordion = props => {\n  const [isOpen, updateIsOpen] = useState(false);\n\n  const toggleHandler = () => {\n    updateIsOpen(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(Element, Object.assign({}, props, {\n    onClick: toggleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), props.children);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/UI/Accordion/Accordion.js"],"names":["React","useState","styled","Element","p","Accordion","props","isOpen","updateIsOpen","toggleHandler","prev","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,CAAE;;;;;;;CAAzB;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBP,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAACE,IAAI,IAAI,CAACA,IAAV,CAAZ;AACH,GAFD;;AAIA,sBACI,oBAAC,OAAD,oBAAaJ,KAAb;AAAoB,IAAA,OAAO,EAAEG,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKH,KAAK,CAACK,QADX,CADJ;AAKH,CAbD;;AAeA,eAAeN,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Element = styled.p`\n    display: inline-block;\n    word-wrap: break-word;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-height: 3.75em;\n    line-height: 1.25em;\n`;\n\nconst Accordion = (props) => {\n\n    const [isOpen, updateIsOpen] = useState(false);\n    \n    const toggleHandler = () => {\n        updateIsOpen(prev => !prev);\n    }\n\n    return (\n        <Element {...props} onClick={toggleHandler}>\n            {props.children}\n        </Element>\n    );\n}\n\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}