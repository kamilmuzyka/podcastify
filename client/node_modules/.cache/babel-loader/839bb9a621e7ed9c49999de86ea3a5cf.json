{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Spotify=/*#__PURE__*/function(){function Spotify(){_classCallCheck(this,Spotify);}_createClass(Spotify,null,[{key:\"retrieveToken\",value:function retrieveToken(){if(localStorage.getItem('access')){var _JSON$parse=JSON.parse(localStorage.getItem('access')),token=_JSON$parse.token;return token?token:false;}return false;}},{key:\"getSearchResults\",value:function(){var _getSearchResults=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(query){var token,data,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=this.retrieveToken();if(token){_context.next=3;break;}return _context.abrupt(\"return\");case 3:_context.next=5;return fetch(\"https://api.spotify.com/v1/search?q=\".concat(query,\"&type=show,episode&limit=10\"),{headers:{'Authorization':'Bearer '+token}});case 5:data=_context.sent;_context.next=8;return data.json();case 8:results=_context.sent;return _context.abrupt(\"return\",results);case 10:case\"end\":return _context.stop();}}},_callee,this);}));function getSearchResults(_x){return _getSearchResults.apply(this,arguments);}return getSearchResults;}()},{key:\"getUserProfile\",value:function(){var _getUserProfile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var token,data,results;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:token=this.retrieveToken();if(token){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:_context2.next=5;return fetch(\"https://api.spotify.com/v1/me\",{headers:{'Authorization':'Bearer '+token}});case 5:data=_context2.sent;_context2.next=8;return data.json();case 8:results=_context2.sent;return _context2.abrupt(\"return\",results);case 10:case\"end\":return _context2.stop();}}},_callee2,this);}));function getUserProfile(){return _getUserProfile.apply(this,arguments);}return getUserProfile;}()}]);return Spotify;}();export default Spotify;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/models/Spotify.js"],"names":["Spotify","localStorage","getItem","JSON","parse","token","query","retrieveToken","fetch","headers","data","json","results"],"mappings":"knBAAMA,CAAAA,O,yJAEqB,CACnB,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,CAAmC,iBACbC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADa,CACvBG,KADuB,aACvBA,KADuB,CAE/B,MAAOA,CAAAA,KAAK,CAAGA,KAAH,CAAW,KAAvB,CACH,CACD,MAAO,MAAP,CACH,C,0IAE6BC,K,yIACpBD,K,CAAQ,KAAKE,aAAL,E,IAEVF,K,uFAIeG,CAAAA,KAAK,+CAAwCF,KAAxC,gCAA4E,CAChGG,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CADuF,CAA5E,C,QAAlBK,I,qCAKgBA,CAAAA,IAAI,CAACC,IAAL,E,QAAhBC,O,+CACCA,O,8bAIDP,K,CAAQ,KAAKE,aAAL,E,IAEVF,K,0FAIeG,CAAAA,KAAK,iCAAkC,CACtDC,OAAO,CAAE,CACL,gBAAiB,UAAYJ,KADxB,CAD6C,CAAlC,C,QAAlBK,I,uCAKgBA,CAAAA,IAAI,CAACC,IAAL,E,QAAhBC,O,iDACCA,O,2LAIf,cAAeZ,CAAAA,OAAf","sourcesContent":["class Spotify {\n\n    static retrieveToken() {\n        if(localStorage.getItem('access')) {\n            const { token } = JSON.parse(localStorage.getItem('access'));\n            return token ? token : false;\n        }\n        return false;\n    }\n\n    static async getSearchResults(query) {\n        const token = this.retrieveToken();\n\n        if(!token) {\n            return;\n        }\n\n        const data = await fetch(`https://api.spotify.com/v1/search?q=${query}&type=show,episode&limit=10`, {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        });\n        const results = await data.json();\n        return results;\n    }\n\n    static async getUserProfile() {\n        const token = this.retrieveToken();\n\n        if(!token) {\n            return;\n        }\n\n        const data = await fetch(`https://api.spotify.com/v1/me`, {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        });\n        const results = await data.json();\n        return results;\n    }\n}\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}