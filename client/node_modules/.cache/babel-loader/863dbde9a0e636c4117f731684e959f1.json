{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Auth from './controllers/Auth';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen';\nimport Landing from './components/Landing/Landing';\nimport ThemeContextProvider from './contexts/ThemeContextProvider';\nimport MenuContextProvider from './contexts/MenuContextProvider';\nimport QueueContextProvider from './contexts/QueueContextProvider';\nimport PlayerContextProvider from './contexts/PlayerContextProvider';\nimport ModalContextProvider from './contexts/ModalContextProvider';\nimport GlobalStyle from './styles/globalStyle';\nimport Header from './components/Header/Header';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Navigation from './components/Navigation/Navigation';\nimport Workspace from './components/Workspace/Workspace';\nimport Player from './components/Workspace/Player/Player';\n\nfunction App(props) {\n  const [isAuthenticated, updateIsAuthenticated] = useState(false);\n  const [isLoading, updateIsLoading] = useState(true);\n  useEffect(() => {\n    updateIsLoading(false);\n  }, []);\n  useEffect(() => {\n    if (Auth.check()) {\n      updateIsAuthenticated(true);\n      return;\n    }\n\n    updateIsAuthenticated(false);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThemeContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingScreen, {\n    loading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), isAuthenticated ? /*#__PURE__*/React.createElement(MenuContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(QueueContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PlayerContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ModalContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Workspace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Player, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })))) : /*#__PURE__*/React.createElement(Landing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/App.js"],"names":["React","useState","useEffect","withRouter","Auth","LoadingScreen","Landing","ThemeContextProvider","MenuContextProvider","QueueContextProvider","PlayerContextProvider","ModalContextProvider","GlobalStyle","Header","Wrapper","Navigation","Workspace","Player","App","props","isAuthenticated","updateIsAuthenticated","isLoading","updateIsLoading","check","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,eAAD,EAAkBC,qBAAlB,IAA2CpB,QAAQ,CAAC,KAAD,CAAzD;AACA,QAAM,CAACqB,SAAD,EAAYC,eAAZ,IAA+BtB,QAAQ,CAAC,IAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFQ,EAEN,EAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,IAAI,CAACoB,KAAL,EAAJ,EAAkB;AAChBH,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAPQ,CAAT;AASA,sBACI,uDACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC,SAAS,CAACG,QAAV,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIL,eAAe,gBACf,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFJ,eAQI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,CADF,CADe,gBAgBf,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAoBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF,CADJ;AA0BD;;AAED,eAAejB,UAAU,CAACe,GAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Auth from './controllers/Auth';\nimport LoadingScreen from './components/LoadingScreen/LoadingScreen';\nimport Landing from './components/Landing/Landing';\nimport ThemeContextProvider from './contexts/ThemeContextProvider';\nimport MenuContextProvider from './contexts/MenuContextProvider';\nimport QueueContextProvider from './contexts/QueueContextProvider';\nimport PlayerContextProvider from './contexts/PlayerContextProvider';\nimport ModalContextProvider from './contexts/ModalContextProvider';\nimport GlobalStyle from './styles/globalStyle';\nimport Header from './components/Header/Header';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Navigation from './components/Navigation/Navigation';\nimport Workspace from './components/Workspace/Workspace';\nimport Player from './components/Workspace/Player/Player';\n\nfunction App(props) {\n  const [isAuthenticated, updateIsAuthenticated] = useState(false);\n  const [isLoading, updateIsLoading] = useState(true);\n\n  useEffect(() => {\n    updateIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (Auth.check()) {\n      updateIsAuthenticated(true);\n      return;\n    }\n\n    updateIsAuthenticated(false);\n  });\n\n  return (\n      <>\n        <ThemeContextProvider>\n          <LoadingScreen loading={isLoading.toString()}/>\n          { isAuthenticated ?\n            <MenuContextProvider>\n              <QueueContextProvider>\n                <PlayerContextProvider>\n                    <Header/>\n                    <Wrapper>\n                      <ModalContextProvider>\n                        <Navigation/>\n                      </ModalContextProvider>\n                      <Workspace/>\n                    </Wrapper>\n                    <Player/>\n                </PlayerContextProvider>\n              </QueueContextProvider>\n            </MenuContextProvider>\n            :\n            <Landing/>\n          }\n          <GlobalStyle/>\n        </ThemeContextProvider>\n      </>\n  );\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}