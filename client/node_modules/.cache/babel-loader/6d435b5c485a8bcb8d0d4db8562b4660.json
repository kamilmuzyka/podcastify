{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/client/src/components/Workspace/Shows/Shows.js\";\nimport React, { useState, useEffect } from 'react';\nimport Spotify from '../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nconst Shows = props => {\n  const [shows, updateShows] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const response = await Spotify.getUserShows();\n      updateShows(response.items.map(item => item.show).reverse());\n    })();\n  }, []);\n  return shows.length > 0 ? /*#__PURE__*/React.createElement(Tiles, {\n    title: \"Followed Shows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, shows.map(show => {\n    return /*#__PURE__*/React.createElement(Tile, {\n      key: show.id,\n      id: show.id,\n      title: show.name,\n      description: show.description,\n      image: show.images[1].url,\n      type: SEARCH_TYPES.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }\n    });\n  })) : null;\n};\n\nexport default Shows;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/client/src/components/Workspace/Shows/Shows.js"],"names":["React","useState","useEffect","Spotify","SEARCH_TYPES","Tiles","Tile","Shows","props","shows","updateShows","response","getUserShows","items","map","item","show","reverse","length","id","name","description","images","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMS,QAAQ,GAAG,MAAMR,OAAO,CAACS,YAAR,EAAvB;AACAF,MAAAA,WAAW,CACPC,QAAQ,CAACE,KAAT,CACKC,GADL,CACSC,IAAI,IAAIA,IAAI,CAACC,IADtB,EAEKC,OAFL,EADO,CAAX;AAKH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA,SACKR,KAAK,CAACS,MAAN,GAAe,CAAhB,gBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMT,KAAK,CAACK,GAAN,CAAUE,IAAI,IAAI;AAChB,wBAAO,oBAAC,IAAD;AACH,MAAA,GAAG,EAAEA,IAAI,CAACG,EADP;AAEH,MAAA,EAAE,EAAEH,IAAI,CAACG,EAFN;AAGH,MAAA,KAAK,EAAEH,IAAI,CAACI,IAHT;AAIH,MAAA,WAAW,EAAEJ,IAAI,CAACK,WAJf;AAKH,MAAA,KAAK,EAAEL,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,GALnB;AAMH,MAAA,IAAI,EAAEnB,YAAY,CAACY,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH,GARC,CADN,CADJ,GAYE,IAbN;AAeH,CA7BD;;AA+BA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Spotify from '../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nconst Shows = (props) => {\n    const [shows, updateShows] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const response = await Spotify.getUserShows();\n            updateShows(\n                response.items\n                    .map(item => item.show)\n                    .reverse()\n            );\n        })();\n    }, []);\n\n    return (\n        (shows.length > 0) ?\n            <Tiles title=\"Followed Shows\">\n                { shows.map(show => {\n                    return <Tile\n                        key={show.id}\n                        id={show.id}\n                        title={show.name}\n                        description={show.description}\n                        image={show.images[1].url}\n                        type={SEARCH_TYPES.show} />\n                })}\n            </Tiles>\n        : null\n    );\n}\n\nexport default Shows;"]},"metadata":{},"sourceType":"module"}