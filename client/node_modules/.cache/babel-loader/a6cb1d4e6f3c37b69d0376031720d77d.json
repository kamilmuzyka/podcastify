{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/SearchResults/SearchResults.js\";\nimport React, { useState, useContext, useEffect, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { SearchContext } from '../../../contexts/SearchContextProvider';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Spotify from '../../../models/Spotify';\nimport WorkspaceLoading from '../WorkspaceLoading/WorkspaceLoading';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nfunction SearchResults(props) {\n  const [isLoading, updateIsLoading] = useState(true);\n  const [shows, updateShows] = useState([]);\n  const [episodes, updateEpisodes] = useState([]);\n  const {\n    query,\n    updateQuery\n  } = useContext(SearchContext);\n  const {\n    searching,\n    updateSearching\n  } = useContext(SearchContext);\n\n  function prepareShows(shows) {\n    if (shows.length === 0) {\n      updateShows([]);\n      return;\n    }\n\n    const updatedShows = shows.map(show => {\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: show.id,\n        id: show.id,\n        title: show.name,\n        description: show.description,\n        image: show.images[1].url,\n        type: SEARCH_TYPES.show,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }\n      });\n    });\n    updateShows(updatedShows);\n  }\n\n  function prepareEpisodes(episodes) {\n    if (episodes.length === 0) {\n      updateEpisodes([]);\n      return;\n    }\n\n    const updatedEpisodes = episodes.map(episode => {\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: episode.id,\n        id: episode.id,\n        title: episode.name,\n        description: episode.description,\n        image: episode.images[1].url,\n        type: SEARCH_TYPES.episode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      });\n    });\n    updateEpisodes(updatedEpisodes);\n  }\n\n  useEffect(() => {\n    if (!searching) {\n      return;\n    }\n\n    if (query) {\n      (async () => {\n        try {\n          const {\n            shows,\n            episodes\n          } = await Spotify.getSearchResults(query);\n          prepareShows(shows.items);\n          prepareEpisodes(episodes.items);\n          updateIsLoading(false);\n        } catch (err) {\n          console.log(err);\n        }\n      })();\n    }\n  }, [query]);\n  useEffect(() => {\n    return () => {\n      updateSearching(false);\n      updateQuery('');\n    };\n  }, []);\n\n  if (searching) {\n    if (shows.length > 0 && episodes.length > 0) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Tiles, {\n        title: \"Shows\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, shows), /*#__PURE__*/React.createElement(Tiles, {\n        title: \"Episodes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, episodes), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n        loading: isLoading.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (shows.length > 0 && episodes.length === 0) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Tiles, {\n        title: \"Shows\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, shows), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n        loading: isLoading.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (shows.length === 0 && episodes.length > 0) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Tiles, {\n        title: \"Episodes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, episodes), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n        loading: isLoading.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    if (shows.length === 0 && episodes.length === 0) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Nothing found\"), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n        loading: isLoading.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }\n  });\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/SearchResults/SearchResults.js"],"names":["React","useState","useContext","useEffect","Fragment","Redirect","SearchContext","SEARCH_TYPES","Spotify","WorkspaceLoading","Tiles","Tile","SearchResults","props","isLoading","updateIsLoading","shows","updateShows","episodes","updateEpisodes","query","updateQuery","searching","updateSearching","prepareShows","length","updatedShows","map","show","id","name","description","images","url","prepareEpisodes","updatedEpisodes","episode","getSearchResults","items","err","console","log","toString"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { SearchContext } from '../../../contexts/SearchContextProvider';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Spotify from '../../../models/Spotify';\nimport WorkspaceLoading from '../WorkspaceLoading/WorkspaceLoading';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nfunction SearchResults(props) {\n    const [isLoading, updateIsLoading] = useState(true);\n    const [shows, updateShows] = useState([]);\n    const [episodes, updateEpisodes] = useState([]);\n    const { query, updateQuery } = useContext(SearchContext);\n    const { searching, updateSearching } = useContext(SearchContext);\n\n    function prepareShows(shows) {\n        if(shows.length === 0) {\n            updateShows([]);\n            return;\n        }\n\n        const updatedShows = shows.map(show => {\n            return <Tile\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                description={show.description}\n                image={show.images[1].url}\n                type={SEARCH_TYPES.show} />\n        });\n\n        updateShows(updatedShows);\n    }\n\n    function prepareEpisodes(episodes) {\n        if (episodes.length === 0) {\n            updateEpisodes([]);\n            return;\n        }\n\n        const updatedEpisodes = episodes.map(episode => {\n            return <Tile\n                key={episode.id}\n                id={episode.id}\n                title={episode.name}\n                description={episode.description}\n                image={episode.images[1].url}\n                type={SEARCH_TYPES.episode} />\n        });\n\n        updateEpisodes(updatedEpisodes);\n    }\n\n    useEffect(() => {\n        if(!searching) {\n            return;\n        }\n\n        if(query) {\n            (async () => {\n                try {\n                    const { shows, episodes } = await Spotify.getSearchResults(query);\n                    prepareShows(shows.items);\n                    prepareEpisodes(episodes.items);\n                    updateIsLoading(false);\n                } catch(err) {\n                    console.log(err);\n                }\n            })();\n        }\n    }, [query]);\n\n    useEffect(() => {\n        return () => {\n            updateSearching(false);\n            updateQuery('');\n        }\n    }, []);\n\n    if(searching) {\n\n        if(shows.length > 0 && episodes.length > 0) {\n            return (\n                <Fragment>\n                    <Tiles title=\"Shows\">\n                        {shows}\n                    </Tiles>\n                    <Tiles title=\"Episodes\">\n                        {episodes}\n                    </Tiles>\n                    <WorkspaceLoading loading={isLoading.toString()}/>\n                </Fragment>\n            );\n        }\n\n        if(shows.length > 0 && episodes.length === 0) {\n            return (\n                <Fragment>\n                    <Tiles title=\"Shows\">\n                        {shows}\n                    </Tiles>\n                    <WorkspaceLoading loading={isLoading.toString()}/>\n                </Fragment>\n            );\n        }\n\n        if(shows.length === 0 && episodes.length > 0) {\n            return (\n                <Fragment>\n                    <Tiles title=\"Episodes\">\n                        {episodes}\n                    </Tiles>\n                    <WorkspaceLoading loading={isLoading.toString()}/>\n                </Fragment>\n            );\n        }\n\n        if(shows.length === 0 && episodes.length === 0) {\n            return (\n                <Fragment>\n                    <p>Nothing found</p>\n                    <WorkspaceLoading loading={isLoading.toString()}/>\n                </Fragment>\n            );\n        }\n\n    }\n\n    return <Redirect to=\"/\"/>;\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}