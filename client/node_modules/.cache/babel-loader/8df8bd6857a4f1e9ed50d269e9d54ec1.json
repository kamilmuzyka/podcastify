{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/LibraryButton/LibraryButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../../../UI/Button/Button';\nimport Spotify from '../../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../../constants';\n\nconst LibraryButton = ({\n  id,\n  inLibrary,\n  libraryType\n}) => {\n  let text;\n  let action;\n\n  if (inLibrary) {\n    if (libraryType === SEARCH_TYPES.show) {\n      text = 'Unfollow'; // action = () => Spotify.removeUserShow(id);\n    } else {\n      text = 'Remove'; // action = () => Spotify.saveUserShow(id);\n    }\n  } else {\n    if (libraryType === SEARCH_TYPES.show) {\n      text = 'Follow'; // action = () => console.log('Remove episode');\n    } else {\n      text = 'Like'; // action = () => console.log('Add episode');\n    }\n  } // const handleShowFollow = (id) => {\n  //     Spotify.saveUserShow(id);\n  // };\n  // const handleShowUnfollow = (id) => {\n  //     Spotify.removeUserShow(id);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: action,\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, text);\n};\n\nexport default LibraryButton;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/LibraryButton/LibraryButton.js"],"names":["React","useState","useEffect","Button","Spotify","SEARCH_TYPES","LibraryButton","id","inLibrary","libraryType","text","action","show"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,SAAN;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AAEtD,MAAIC,IAAJ;AACA,MAAIC,MAAJ;;AAEA,MAAGH,SAAH,EAAc;AACV,QAAGC,WAAW,KAAKJ,YAAY,CAACO,IAAhC,EAAsC;AAClCF,MAAAA,IAAI,GAAG,UAAP,CADkC,CAElC;AAEH,KAJD,MAIO;AACHA,MAAAA,IAAI,GAAG,QAAP,CADG,CAEH;AACH;AACJ,GATD,MASO;AACH,QAAGD,WAAW,KAAKJ,YAAY,CAACO,IAAhC,EAAsC;AAClCF,MAAAA,IAAI,GAAG,QAAP,CADkC,CAElC;AACH,KAHD,MAGO;AACHA,MAAAA,IAAI,GAAG,MAAP,CADG,CAEH;AACH;AACJ,GAtBqD,CAwBtD;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,MAA/B;AAAuC,IAAA,OAAO,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADJ;AAKH,CArCD;;AAuCA,eAAeJ,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '../../../../UI/Button/Button';\nimport Spotify from '../../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../../constants';\n\nconst LibraryButton = ({ id, inLibrary, libraryType }) => {\n\n    let text;\n    let action;\n\n    if(inLibrary) {\n        if(libraryType === SEARCH_TYPES.show) {\n            text = 'Unfollow';\n            // action = () => Spotify.removeUserShow(id);\n\n        } else {\n            text = 'Remove';\n            // action = () => Spotify.saveUserShow(id);\n        }\n    } else {\n        if(libraryType === SEARCH_TYPES.show) {\n            text = 'Follow';\n            // action = () => console.log('Remove episode');\n        } else {\n            text = 'Like';\n            // action = () => console.log('Add episode');\n        }\n    }\n\n    // const handleShowFollow = (id) => {\n    //     Spotify.saveUserShow(id);\n    // };\n\n    // const handleShowUnfollow = (id) => {\n    //     Spotify.removeUserShow(id);\n    // };\n\n    return (\n        <Button type=\"button\" onClick={action} outline>\n            {text}\n        </Button>\n    );\n}\n\nexport default LibraryButton;"]},"metadata":{},"sourceType":"module"}