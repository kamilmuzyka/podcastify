{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{withRouter}from'react-router-dom';import{SEARCH_TYPES}from'../../../constants';import Spotify from'../../../models/Spotify';import WorkspaceLoading from'../WorkspaceLoading/WorkspaceLoading';import Tiles from'../Tiles/Tiles';import Tile from'../Tiles/Tile/Tile';function SearchResults(_ref){var history=_ref.history;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],updateIsLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),query=_useState4[0],updateQuery=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),shows=_useState6[0],updateShows=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),episodes=_useState8[0],updateEpisodes=_useState8[1];useEffect(function(){var newQuery=new URLSearchParams(history.location.search).get('query');if(newQuery!==query){updateQuery(newQuery);}},[history.location.search,query]);useEffect(function(){if(query){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Spotify$getSea,_shows,_episodes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Spotify.getSearchResults(query);case 3:_yield$Spotify$getSea=_context.sent;_shows=_yield$Spotify$getSea.shows;_episodes=_yield$Spotify$getSea.episodes;updateShows(_shows.items);updateEpisodes(_episodes.items);updateIsLoading(false);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);throw new Error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}))();}},[query]);return/*#__PURE__*/React.createElement(React.Fragment,null,shows.length>0?/*#__PURE__*/React.createElement(Tiles,{title:\"Shows\"},shows.map(function(show){return/*#__PURE__*/React.createElement(Tile,{key:show.id,id:show.id,title:show.name,description:show.description,image:show.images[1].url,type:SEARCH_TYPES.show});})):null,episodes.length>0?/*#__PURE__*/React.createElement(Tiles,{title:\"Episodes\"},episodes.map(function(episode){return/*#__PURE__*/React.createElement(Tile,{key:episode.id,id:episode.id,title:episode.name,description:episode.description,image:episode.images[1].url,type:SEARCH_TYPES.episode});})):null,shows.length===0&&episodes.length===0?'No results for '+query:null,/*#__PURE__*/React.createElement(WorkspaceLoading,{loading:isLoading.toString()}));}export default withRouter(SearchResults);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/SearchResults/SearchResults.js"],"names":["React","useState","useEffect","withRouter","SEARCH_TYPES","Spotify","WorkspaceLoading","Tiles","Tile","SearchResults","history","isLoading","updateIsLoading","query","updateQuery","shows","updateShows","episodes","updateEpisodes","newQuery","URLSearchParams","location","search","get","getSearchResults","items","Error","length","map","show","id","name","description","images","url","episode","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Spotify from '../../../models/Spotify';\nimport WorkspaceLoading from '../WorkspaceLoading/WorkspaceLoading';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nfunction SearchResults({ history }) {\n    const [isLoading, updateIsLoading] = useState(true);\n    const [query, updateQuery] = useState('');\n    const [shows, updateShows] = useState([]);\n    const [episodes, updateEpisodes] = useState([]);\n\n    useEffect(() => {\n        const newQuery = new URLSearchParams(history.location.search).get('query');\n        if (newQuery !== query) {\n            updateQuery(newQuery);\n        }\n    }, [history.location.search, query]);\n\n    useEffect(() => {\n        if (query) {\n            (async () => {\n                try {\n                    const { shows, episodes } = await Spotify.getSearchResults(query);\n                    updateShows(shows.items);\n                    updateEpisodes(episodes.items);\n                    updateIsLoading(false);\n                } catch(err) {\n                    throw new Error(err);\n                }\n            })();\n        }\n    }, [query]);\n\n    return (\n        <>\n            { (shows.length > 0) ?\n                <Tiles title=\"Shows\">\n                    { shows.map(show => {\n                        return <Tile\n                            key={show.id}\n                            id={show.id}\n                            title={show.name}\n                            description={show.description}\n                            image={show.images[1].url}\n                            type={SEARCH_TYPES.show} />\n                    })}\n                </Tiles>\n                :\n                null\n            }\n\n            { (episodes.length) > 0 ?\n                <Tiles title=\"Episodes\">\n                    { episodes.map(episode => {\n                        return <Tile\n                            key={episode.id}\n                            id={episode.id}\n                            title={episode.name}\n                            description={episode.description}\n                            image={episode.images[1].url}\n                            type={SEARCH_TYPES.episode} />\n                    })}\n                </Tiles>\n                :\n                null\n            }\n\n            { (shows.length === 0 && episodes.length === 0) ? \n                'No results for ' + query\n                :\n                null\n            }\n\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </>\n    );\n}\n\nexport default withRouter(SearchResults);"]},"metadata":{},"sourceType":"module"}