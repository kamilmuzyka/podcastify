{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/contexts/ModalContextProvider.js\";\nimport React, { createContext, useState } from 'react';\nexport const ModalContext = createContext();\n\nconst ModalContextProvider = props => {\n  const [modalActive, updateModalActive] = useState(false); // const [modalContent, updateModalContent] = useState(null);\n\n  const openModal = content => {\n    // updateModalContent(content);\n    updateModalActive(true);\n  };\n\n  const closeModal = () => {\n    // setTimeout(() => updateModalContent(null), 200);\n    updateModalActive(false);\n  };\n\n  return /*#__PURE__*/React.createElement(ModalContext.Provider, {\n    value: {\n      modalActive,\n      // modalContent,\n      openModal,\n      closeModal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ModalContextProvider;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/contexts/ModalContextProvider.js"],"names":["React","createContext","useState","ModalContext","ModalContextProvider","props","modalActive","updateModalActive","openModal","content","closeModal","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;;AAEP,MAAMG,oBAAoB,GAAIC,KAAD,IAAW;AACpC,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCL,QAAQ,CAAC,KAAD,CAAjD,CADoC,CAEpC;;AAEA,QAAMM,SAAS,GAAIC,OAAD,IAAa;AAC3B;AACAF,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAHD;;AAKA,QAAMG,UAAU,GAAG,MAAM;AACrB;AACAH,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAHD;;AAKA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC1BD,MAAAA,WAD0B;AAE1B;AACAE,MAAAA,SAH0B;AAI1BE,MAAAA;AAJ0B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKL,KAAK,CAACM,QANX,CADJ;AAUH,CAxBD;;AA0BA,eAAeP,oBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const ModalContext = createContext();\n\nconst ModalContextProvider = (props) => {\n    const [modalActive, updateModalActive] = useState(false);\n    // const [modalContent, updateModalContent] = useState(null);\n\n    const openModal = (content) => {\n        // updateModalContent(content);\n        updateModalActive(true);\n    }\n\n    const closeModal = () => {\n        // setTimeout(() => updateModalContent(null), 200);\n        updateModalActive(false);\n    }\n\n    return (\n        <ModalContext.Provider value={{\n            modalActive,\n            // modalContent,\n            openModal,\n            closeModal\n        }}>\n            {props.children}\n        </ModalContext.Provider>\n    );\n}\n\nexport default ModalContextProvider;"]},"metadata":{},"sourceType":"module"}