{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Player/Player.js\";\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { PlayerContext } from '../../../contexts/PlayerContextProvider';\nimport PlayButton from '../../../UI/PlayButton/PlayButton';\nimport PauseButton from '../../../UI/PauseButton/PauseButton';\nimport SkipButton from '../../../UI/SkipButton/SkipButton';\nconst Element = styled.div`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    z-index: 700;\n    width: 100%;\n    background-color: ${({\n  theme\n}) => theme.colors.tertiary};\n    @media (min-width: 1024px) {\n        z-index: 1000;\n    }\n`;\nconst Progress = styled.div`\n    width: 100%;\n    height: 5px;\n    background-color: #414141;\n    @media (min-width: 1380px) {\n        position: absolute;\n        bottom: 1.5em;\n        left: 50%;\n        transform: translateX(-50%);\n        max-width: 700px;\n        border-radius: 2.5px;\n    }\n`;\nconst Bar = styled.div`\n    width: ${({\n  percentage\n}) => percentage ? percentage : 0}%;\n    height: 100%;\n    background-color: ${({\n  theme\n}) => theme.colors.specific};\n    transition: width 0.3s linear;\n\n    @media (min-width: 1380px) {\n        border-radius: 2.5px;\n    }\n`;\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 1.5em 2em;\n\n    @media (min-width: 500px) {\n        flex-direction: row;\n        justify-content: flex-start;\n    }\n`;\nconst Controls = styled.div`\n    display: flex;\n    align-items: center;\n    @media (min-width: 500px) {\n        order: 2;\n        flex: 1;\n        justify-content: center;\n    }\n    @media (min-width: 1380px) {\n        position: absolute;\n        top: 1.25em;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n`;\nconst MiddleButton = styled.div`\n    display: inline-block;\n    margin: 0 1em;\n`;\nconst Episode = styled.div`\n    font-size: ${({\n  theme\n}) => theme.typography.small};\n    color: ${({\n  theme\n}) => theme.colors.specific};\n    &:hover {\n        text-decoration: underline;\n    }\n    @media (min-width: 500px) {\n        order: 1;\n    }\n`;\nconst InternalLink = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n    @media (min-width: 500px) {\n        max-width: 250px;\n        display: flex;\n        align-items: center;\n    }\n`;\nconst Thumbnail = styled.img`\n    display: none;\n    @media (min-width: 500px) {\n        display: block;\n        width: 50px;\n        height: 50px;\n        margin-right: 1em;\n        object-fit: cover;\n    }\n`;\nconst Name = styled.p`\n    max-height: 3em;\n    line-height: 1.5;\n    overflow: hidden;\n    overflow-wrap: anywhere;\n    text-overflow: ellipsis;\n`;\n\nconst Player = props => {\n  const [isPlaying, updateIsPlaying] = useState(false);\n  const [progressPercentage, updateProgressPercentage] = useState(0);\n  const {\n    queueHead,\n    loadQueueNext,\n    loadQueuePrevious,\n    currentEpisode\n  } = useContext(PlayerContext);\n  const audioRef = useRef();\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      console.log(isPlaying);\n\n      if (audioRef.current.src) {\n        const progress = Math.round(currentTime / duration * 100);\n        updateProgressPercentage(progress);\n      }\n    }, 300);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [isPlaying]);\n\n  const startPlaying = () => {\n    console.log(currentEpisode);\n    audioRef.current.play();\n    updateIsPlaying(true);\n  };\n\n  const stopPlaying = () => {\n    audioRef.current.pause();\n    updateIsPlaying(false);\n  };\n\n  const resetPlayer = () => {\n    stopPlaying();\n    audioRef.current.currentTime = 0;\n    setTimeout(startPlaying, 1000);\n  };\n\n  const playNext = () => {\n    loadQueueNext();\n  };\n\n  const playPrevious = () => {\n    loadQueuePrevious();\n  };\n\n  useEffect(() => {\n    resetPlayer();\n  }, [queueHead]);\n  return /*#__PURE__*/React.createElement(Element, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    percentage: progressPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    src: currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.audio_preview_url,\n    ref: audioRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SkipButton, {\n    direction: \"backward\",\n    scale: 1.25,\n    onClick: playPrevious,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MiddleButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, isPlaying ? /*#__PURE__*/React.createElement(PauseButton, {\n    scale: 1.25,\n    onClick: stopPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(PlayButton, {\n    scale: 1.25,\n    onClick: startPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(SkipButton, {\n    direction: \"forward\",\n    scale: 1.25,\n    onClick: playNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Episode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InternalLink, {\n    to: `/episodes/${currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    src: currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.images[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.name)))));\n};\n\nexport default Player;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Player/Player.js"],"names":["React","useState","useContext","useRef","useEffect","styled","Link","PlayerContext","PlayButton","PauseButton","SkipButton","Element","div","theme","colors","tertiary","Progress","Bar","percentage","specific","Content","Controls","MiddleButton","Episode","typography","small","InternalLink","Thumbnail","img","Name","p","Player","props","isPlaying","updateIsPlaying","progressPercentage","updateProgressPercentage","queueHead","loadQueueNext","loadQueuePrevious","currentEpisode","audioRef","intervalId","setInterval","currentTime","current","duration","console","log","src","progress","Math","round","clearInterval","startPlaying","play","stopPlaying","pause","resetPlayer","setTimeout","playNext","playPrevious","audio_preview_url","id","images","url","name"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { PlayerContext } from '../../../contexts/PlayerContextProvider';\nimport PlayButton from '../../../UI/PlayButton/PlayButton';\nimport PauseButton from '../../../UI/PauseButton/PauseButton';\nimport SkipButton from '../../../UI/SkipButton/SkipButton';\n\nconst Element = styled.div`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    z-index: 700;\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.tertiary};\n    @media (min-width: 1024px) {\n        z-index: 1000;\n    }\n`;\n\nconst Progress = styled.div`\n    width: 100%;\n    height: 5px;\n    background-color: #414141;\n    @media (min-width: 1380px) {\n        position: absolute;\n        bottom: 1.5em;\n        left: 50%;\n        transform: translateX(-50%);\n        max-width: 700px;\n        border-radius: 2.5px;\n    }\n`;\n\nconst Bar = styled.div`\n    width: ${({ percentage }) => percentage ? percentage : 0}%;\n    height: 100%;\n    background-color: ${({ theme }) => theme.colors.specific};\n    transition: width 0.3s linear;\n\n    @media (min-width: 1380px) {\n        border-radius: 2.5px;\n    }\n`;\n\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 1.5em 2em;\n\n    @media (min-width: 500px) {\n        flex-direction: row;\n        justify-content: flex-start;\n    }\n`;\n\nconst Controls = styled.div`\n    display: flex;\n    align-items: center;\n    @media (min-width: 500px) {\n        order: 2;\n        flex: 1;\n        justify-content: center;\n    }\n    @media (min-width: 1380px) {\n        position: absolute;\n        top: 1.25em;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n`;\n\nconst MiddleButton = styled.div`\n    display: inline-block;\n    margin: 0 1em;\n`;\n\nconst Episode = styled.div`\n    font-size: ${({ theme }) => theme.typography.small};\n    color: ${({ theme }) => theme.colors.specific};\n    &:hover {\n        text-decoration: underline;\n    }\n    @media (min-width: 500px) {\n        order: 1;\n    }\n`;\n\nconst InternalLink = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n    @media (min-width: 500px) {\n        max-width: 250px;\n        display: flex;\n        align-items: center;\n    }\n`;\n\nconst Thumbnail = styled.img`\n    display: none;\n    @media (min-width: 500px) {\n        display: block;\n        width: 50px;\n        height: 50px;\n        margin-right: 1em;\n        object-fit: cover;\n    }\n`;\n\nconst Name = styled.p`\n    max-height: 3em;\n    line-height: 1.5;\n    overflow: hidden;\n    overflow-wrap: anywhere;\n    text-overflow: ellipsis;\n`;\n\nconst Player = (props) => {\n    const [isPlaying, updateIsPlaying] = useState(false);\n    const [progressPercentage, updateProgressPercentage] = useState(0);\n    const {\n        queueHead,\n        loadQueueNext,\n        loadQueuePrevious,\n        currentEpisode\n    } = useContext(PlayerContext);\n    const audioRef = useRef();\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            const currentTime = audioRef.current.currentTime;\n            const duration = audioRef.current.duration;\n            console.log(isPlaying);\n            if (audioRef.current.src) {\n                const progress = Math.round(currentTime / duration * 100);\n                updateProgressPercentage(progress);\n            }\n        }, 300);\n        return () => {\n            clearInterval(intervalId);\n        }\n    }, [isPlaying]);\n\n    const startPlaying = () => {\n        console.log(currentEpisode);\n        audioRef.current.play();\n        updateIsPlaying(true);\n    }\n\n    const stopPlaying = () => {\n        audioRef.current.pause();\n        updateIsPlaying(false);\n    }\n\n    const resetPlayer = () => {\n        stopPlaying();\n        audioRef.current.currentTime = 0;\n        setTimeout(startPlaying, 1000);\n    }\n\n    const playNext = () => {\n        loadQueueNext();\n    }\n\n    const playPrevious = () => {\n        loadQueuePrevious();\n    }\n\n    useEffect(() => {\n        resetPlayer();\n    }, [queueHead]);\n\n    return (\n        <Element>\n            <Progress>\n                <Bar percentage={progressPercentage}/>\n            </Progress>\n            <Content>\n                <Controls>\n                    <audio src={currentEpisode?.audio_preview_url} ref={audioRef}/>\n                    <SkipButton direction=\"backward\" scale={1.25} onClick={playPrevious}/>\n                    <MiddleButton>\n                        { isPlaying ?\n                            <PauseButton scale={1.25} onClick={stopPlaying} />\n                            :\n                            <PlayButton scale={1.25} onClick={startPlaying} />\n                        }\n                    </MiddleButton>\n                    <SkipButton direction=\"forward\" scale={1.25} onClick={playNext}/>\n                </Controls>\n                <Episode>\n                    <InternalLink to={`/episodes/${currentEpisode?.id}`}>\n                        <Thumbnail src={currentEpisode?.images[0].url}/>\n                        <Name>\n                            {currentEpisode?.name}\n                        </Name>\n                    </InternalLink>\n                </Episode>\n            </Content>\n        </Element>\n    );\n}\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}