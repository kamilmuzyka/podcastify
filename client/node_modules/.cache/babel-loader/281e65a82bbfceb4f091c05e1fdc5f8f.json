{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Header/Header.js\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport styled from 'styled-components';\nimport Profile from './Profile/Profile';\nimport Search from './Search/Search';\nimport MenuButton from '../../UI/MenuButton/MenuButton';\nimport Spotify from '../../models/Spotify';\nimport DefaultImage from '../../assets/img/profile.png';\nimport { MeasuresContext } from '../../contexts/MeasuresContextProvider';\nconst Element = styled.header`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 1.5em 2em;\n    background-color: ${({\n  theme\n}) => theme.colors.tertiary};\n\n    & > * {\n        margin-top: 2em;\n    }\n\n    & > *:first-child {\n        margin-top: 0;\n    }\n\n    @media (min-width: 500px) {\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        & > * {\n            margin-top: 0;\n        }\n    }\n`;\nconst StyledMenuButton = styled(MenuButton)`\n    top: 0;\n    right: 2em;\n\n    @media (min-width: 500px) {\n        top: 50%;\n        transform: translateY(-50%);\n    }\n`;\n\nfunction Header(props) {\n  const [profileURL, profileUpdateURL] = useState();\n  const [profileName, profileUpdateName] = useState();\n  const [profileImage, profileUpdateImage] = useState();\n  const [imageLoading, updateImageLoading] = useState(true);\n  const {\n    measures,\n    updateMeasures\n  } = useContext(MeasuresContext);\n  const ref = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const profile = await Spotify.getUserProfile();\n\n        if (!profile) {\n          return;\n        }\n\n        profileUpdateURL(profile.external_urls.spotify);\n        profileUpdateName(profile.display_name);\n        profileUpdateImage(profile.images[0].url || DefaultImage);\n        updateImageLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    const height = headerRef.current.offsetHeight;\n    updateMeasures({ ...measures,\n      header: height\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Element, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    external: profileURL,\n    name: profileName,\n    image: profileImage,\n    loading: imageLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledMenuButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Header/Header.js"],"names":["React","useState","useEffect","useRef","useContext","styled","Profile","Search","MenuButton","Spotify","DefaultImage","MeasuresContext","Element","header","theme","colors","tertiary","StyledMenuButton","Header","props","profileURL","profileUpdateURL","profileName","profileUpdateName","profileImage","profileUpdateImage","imageLoading","updateImageLoading","measures","updateMeasures","ref","profile","getUserProfile","external_urls","spotify","display_name","images","url","err","console","error","height","headerRef","current","offsetHeight","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,QAAgE,OAAhE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,eAAT,QAAgC,wCAAhC;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,MAAO;;;;;;wBAMN,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,QAAS;;;;;;;;;;;;;;;;;;CAN7D;AA0BA,MAAMC,gBAAgB,GAAGZ,MAAM,CAACG,UAAD,CAAa;;;;;;;;CAA5C;;AAUA,SAASU,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCpB,QAAQ,EAA/C;AACA,QAAM,CAACqB,WAAD,EAAcC,iBAAd,IAAmCtB,QAAQ,EAAjD;AACA,QAAM,CAACuB,YAAD,EAAeC,kBAAf,IAAqCxB,QAAQ,EAAnD;AACA,QAAM,CAACyB,YAAD,EAAeC,kBAAf,IAAqC1B,QAAQ,CAAC,IAAD,CAAnD;AACA,QAAM;AAAE2B,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA+BzB,UAAU,CAACO,eAAD,CAA/C;AACA,QAAMmB,GAAG,GAAG3B,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAM6B,OAAO,GAAG,MAAMtB,OAAO,CAACuB,cAAR,EAAtB;;AACA,YAAG,CAACD,OAAJ,EAAa;AACT;AACH;;AACDV,QAAAA,gBAAgB,CAACU,OAAO,CAACE,aAAR,CAAsBC,OAAvB,CAAhB;AACAX,QAAAA,iBAAiB,CAACQ,OAAO,CAACI,YAAT,CAAjB;AACAV,QAAAA,kBAAkB,CAACM,OAAO,CAACK,MAAR,CAAe,CAAf,EAAkBC,GAAlB,IAAyB3B,YAA1B,CAAlB;AACAiB,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OATD,CASE,OAAMW,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,KAbD;AAcH,GAfQ,EAeN,EAfM,CAAT;AAiBApC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuC,MAAM,GAAGC,SAAS,CAACC,OAAV,CAAkBC,YAAjC;AACAf,IAAAA,cAAc,CAAC,EACX,GAAGD,QADQ;AAEXf,MAAAA,MAAM,EAAE4B;AAFG,KAAD,CAAd;AAIH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEX,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,QAAQ,EAAEV,UADd;AAEI,IAAA,IAAI,EAAEE,WAFV;AAGI,IAAA,KAAK,EAAEE,YAHX;AAII,IAAA,OAAO,EAAEE,YAAY,CAACmB,QAAb,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH;;AAED,eAAe3B,MAAf","sourcesContent":["import React, { useState, useEffect, useRef, useContext }  from 'react';\nimport styled from 'styled-components';\nimport Profile from './Profile/Profile';\nimport Search from './Search/Search';\nimport MenuButton from '../../UI/MenuButton/MenuButton';\nimport Spotify from '../../models/Spotify';\nimport DefaultImage from '../../assets/img/profile.png';\nimport { MeasuresContext } from '../../contexts/MeasuresContextProvider';\n\nconst Element = styled.header`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 1.5em 2em;\n    background-color: ${({ theme }) => theme.colors.tertiary};\n\n    & > * {\n        margin-top: 2em;\n    }\n\n    & > *:first-child {\n        margin-top: 0;\n    }\n\n    @media (min-width: 500px) {\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        & > * {\n            margin-top: 0;\n        }\n    }\n`;\n\nconst StyledMenuButton = styled(MenuButton)`\n    top: 0;\n    right: 2em;\n\n    @media (min-width: 500px) {\n        top: 50%;\n        transform: translateY(-50%);\n    }\n`;\n\nfunction Header(props) {\n    const [profileURL, profileUpdateURL] = useState();\n    const [profileName, profileUpdateName] = useState();\n    const [profileImage, profileUpdateImage] = useState();\n    const [imageLoading, updateImageLoading] = useState(true);\n    const { measures, updateMeasures } = useContext(MeasuresContext);\n    const ref = useRef();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const profile = await Spotify.getUserProfile();\n                if(!profile) {\n                    return;\n                }\n                profileUpdateURL(profile.external_urls.spotify);\n                profileUpdateName(profile.display_name);\n                profileUpdateImage(profile.images[0].url || DefaultImage);\n                updateImageLoading(false);\n            } catch(err) {\n                console.error(err);\n            }\n        })();\n    }, []);\n\n    useEffect(() => {\n        const height = headerRef.current.offsetHeight;\n        updateMeasures({\n            ...measures,\n            header: height\n        });\n    }, []);\n\n    return (\n        <Element ref={ref}>\n            <Profile\n                external={profileURL}\n                name={profileName}\n                image={profileImage}\n                loading={imageLoading.toString()}/>\n            <Search/>\n            <StyledMenuButton/>\n        </Element>\n    );\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}