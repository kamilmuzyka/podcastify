{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/LibraryButton/LibraryButton.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../../../UI/Button/Button';\nimport Spotify from '../../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../../constants';\n\nconst LibraryButton = ({\n  inLibrary,\n  libraryType\n}) => {\n  let text;\n\n  if (inLibrary) {\n    if (libraryType === SEARCH_TYPES.show) {\n      text = 'Unfollow';\n    } else {\n      text = 'Follow';\n    }\n  } else {\n    if (libraryType === SEARCH_TYPES.episode) {\n      text = 'Remove';\n    } else {\n      text = 'Like';\n    }\n  }\n\n  const handleShowFollow = id => {\n    Spotify.saveUserShow(id);\n  };\n\n  const handleShowUnfollow = id => {\n    Spotify.removeUserShow(id);\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, text);\n};\n\nexport default LibraryButton;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Details/LibraryButton/LibraryButton.js"],"names":["React","useState","useEffect","Button","Spotify","SEARCH_TYPES","LibraryButton","inLibrary","libraryType","text","show","episode","handleShowFollow","id","saveUserShow","handleShowUnfollow","removeUserShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAElD,MAAIC,IAAJ;;AAEA,MAAGF,SAAH,EAAc;AACV,QAAGC,WAAW,KAAKH,YAAY,CAACK,IAAhC,EAAsC;AAClCD,MAAAA,IAAI,GAAG,UAAP;AACH,KAFD,MAEO;AACHA,MAAAA,IAAI,GAAG,QAAP;AACH;AACJ,GAND,MAMO;AACH,QAAGD,WAAW,KAAKH,YAAY,CAACM,OAAhC,EAAyC;AACrCF,MAAAA,IAAI,GAAG,QAAP;AACH,KAFD,MAEO;AACHA,MAAAA,IAAI,GAAG,MAAP;AACH;AACJ;;AAED,QAAMG,gBAAgB,GAAIC,EAAD,IAAQ;AAC7BT,IAAAA,OAAO,CAACU,YAAR,CAAqBD,EAArB;AACH,GAFD;;AAIA,QAAME,kBAAkB,GAAIF,EAAD,IAAQ;AAC/BT,IAAAA,OAAO,CAACY,cAAR,CAAuBH,EAAvB;AACH,GAFD;;AAIA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IADL,CADJ;AAKH,CA/BD;;AAiCA,eAAeH,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '../../../../UI/Button/Button';\nimport Spotify from '../../../../models/Spotify';\nimport { SEARCH_TYPES } from '../../../../constants';\n\nconst LibraryButton = ({ inLibrary, libraryType }) => {\n\n    let text;\n\n    if(inLibrary) {\n        if(libraryType === SEARCH_TYPES.show) {\n            text = 'Unfollow';\n        } else {\n            text = 'Follow';\n        }\n    } else {\n        if(libraryType === SEARCH_TYPES.episode) {\n            text = 'Remove';\n        } else {\n            text = 'Like';\n        }\n    }\n\n    const handleShowFollow = (id) => {\n        Spotify.saveUserShow(id);\n    };\n\n    const handleShowUnfollow = (id) => {\n        Spotify.removeUserShow(id);\n    };\n\n    return (\n        <Button type=\"button\" outline>\n            {text}\n        </Button>\n    );\n}\n\nexport default LibraryButton;"]},"metadata":{},"sourceType":"module"}