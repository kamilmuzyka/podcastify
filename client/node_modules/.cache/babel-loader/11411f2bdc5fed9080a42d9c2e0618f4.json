{"ast":null,"code":"const settings = {\n  clientID: 'c9587c71088b4ad78b3f54fda5ba1544',\n  redirectURI: 'http://localhost:3000/'\n};\n\nclass Auth {\n  static logIn() {\n    const params = new URLSearchParams({\n      client_id: settings.clientID,\n      redirect_uri: settings.redirectURI,\n      response_type: 'token'\n    }).toString();\n    window.location.href = 'https://accounts.spotify.com/authorize?' + params;\n  }\n\n  static logOut() {\n    localStorage.removeItem('access');\n    window.location.href = '/';\n  }\n\n  static check(access) {\n    function accessDataAvailable() {\n      if (access) {\n        const expires = access.expires;\n        const now = Math.floor(Date.now());\n        console.log(now < expires);\n        return now < expires;\n      }\n\n      return false;\n    }\n\n    function hashAvailable() {\n      const hash = window.location.hash;\n      return hash ? true : false;\n    }\n\n    if (accessDataAvailable()) {\n      return true;\n    }\n\n    if (hashAvailable()) {\n      const hash = window.location.hash;\n      const replaced = hash.replace('#', '?');\n      const params = new URLSearchParams(replaced);\n      const token = params.get('access_token');\n      const expiresAddOn = params.get('expires_in') * 1000;\n      const expiresBase = +new Date().getTime();\n      const expires = expiresBase + expiresAddOn;\n      localStorage.setItem('access', JSON.stringify({\n        token,\n        expires\n      }));\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/controllers/Auth.js"],"names":["settings","clientID","redirectURI","Auth","logIn","params","URLSearchParams","client_id","redirect_uri","response_type","toString","window","location","href","logOut","localStorage","removeItem","check","access","accessDataAvailable","expires","now","Math","floor","Date","console","log","hashAvailable","hash","replaced","replace","token","get","expiresAddOn","expiresBase","getTime","setItem","JSON","stringify"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,kCADG;AAEbC,EAAAA,WAAW,EAAE;AAFA,CAAjB;;AAKA,MAAMC,IAAN,CAAW;AACP,SAAOC,KAAP,GAAe;AACX,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/BC,MAAAA,SAAS,EAAEP,QAAQ,CAACC,QADW;AAE/BO,MAAAA,YAAY,EAAER,QAAQ,CAACE,WAFQ;AAG/BO,MAAAA,aAAa,EAAE;AAHgB,KAApB,EAIZC,QAJY,EAAf;AAKAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,4CAA4CR,MAAnE;AACH;;AAED,SAAOS,MAAP,GAAgB;AACZC,IAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACAL,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH;;AAED,SAAOI,KAAP,CAAaC,MAAb,EAAqB;AACjB,aAASC,mBAAT,GAA+B;AAC3B,UAAID,MAAJ,EAAY;AACR,cAAME,OAAO,GAAGF,MAAM,CAACE,OAAvB;AACA,cAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACH,GAAL,EAAX,CAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,GAAGD,OAAlB;AACA,eAAOC,GAAG,GAAGD,OAAb;AACH;;AACD,aAAO,KAAP;AACH;;AAED,aAASO,aAAT,GAAyB;AACrB,YAAMC,IAAI,GAAGjB,MAAM,CAACC,QAAP,CAAgBgB,IAA7B;AACA,aAAOA,IAAI,GAAG,IAAH,GAAU,KAArB;AACH;;AAED,QAAIT,mBAAmB,EAAvB,EAA2B;AACvB,aAAO,IAAP;AACH;;AAED,QAAIQ,aAAa,EAAjB,EAAqB;AACjB,YAAMC,IAAI,GAAGjB,MAAM,CAACC,QAAP,CAAgBgB,IAA7B;AACA,YAAMC,QAAQ,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAjB;AACA,YAAMzB,MAAM,GAAG,IAAIC,eAAJ,CAAoBuB,QAApB,CAAf;AACA,YAAME,KAAK,GAAG1B,MAAM,CAAC2B,GAAP,CAAW,cAAX,CAAd;AACA,YAAMC,YAAY,GAAG5B,MAAM,CAAC2B,GAAP,CAAW,YAAX,IAA2B,IAAhD;AACA,YAAME,WAAW,GAAG,CAAG,IAAIV,IAAJ,EAAD,CAAaW,OAAb,EAAtB;AACA,YAAMf,OAAO,GAAGc,WAAW,GAAGD,YAA9B;AACAlB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAe;AAC1CP,QAAAA,KAD0C;AAE1CX,QAAAA;AAF0C,OAAf,CAA/B;AAIA,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAnDM;;AAsDX,eAAejB,IAAf","sourcesContent":["const settings = {\n    clientID: 'c9587c71088b4ad78b3f54fda5ba1544',\n    redirectURI: 'http://localhost:3000/'\n}\n\nclass Auth {\n    static logIn() {\n        const params = new URLSearchParams({\n            client_id: settings.clientID,\n            redirect_uri: settings.redirectURI,\n            response_type: 'token'\n        }).toString();\n        window.location.href = 'https://accounts.spotify.com/authorize?' + params;\n    }\n\n    static logOut() {\n        localStorage.removeItem('access');\n        window.location.href = '/';\n    }\n\n    static check(access) {\n        function accessDataAvailable() {\n            if (access) {\n                const expires = access.expires;\n                const now = Math.floor(Date.now());\n                console.log(now < expires);\n                return now < expires;\n            }\n            return false;\n        }\n\n        function hashAvailable() {\n            const hash = window.location.hash;\n            return hash ? true : false;\n        }\n\n        if (accessDataAvailable()) {\n            return true;\n        }\n\n        if (hashAvailable()) {\n            const hash = window.location.hash;\n            const replaced = hash.replace('#', '?');\n            const params = new URLSearchParams(replaced);\n            const token = params.get('access_token');\n            const expiresAddOn = params.get('expires_in') * 1000;\n            const expiresBase = + (new Date()).getTime();\n            const expires = expiresBase + expiresAddOn;\n            localStorage.setItem('access', JSON.stringify({\n                token,\n                expires\n            }));\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}