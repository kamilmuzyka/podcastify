{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/EpisodesList/EpisodeItem/EpisodeItem.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { QueueContext } from '../../../../../contexts/QueueContextProvider';\nimport { PlayerContext } from '../../../../../contexts/PlayerContextProvider';\nimport Accordion from '../../../../../UI/Accordion/Accordion';\nimport convertTime from '../../../../../utils/convertTime';\nimport LikeButton from '../../../../../UI/LikeButton/LikeButton';\nimport PlayButton from '../../../../../UI/PlayButton/PlayButton';\nimport PauseButton from '../../../../../UI/PauseButton/PauseButton';\nconst Element = styled.li`\n    margin-top: 0.75em;\n    padding-top: 0.75em;\n    border-top: 1px solid #707070;\n    color: ${({\n  theme\n}) => theme.colors.specific};\n\n    & > * {\n        margin-top: 0.25em;\n    }\n\n    @media (min-width: 1380px) {\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-columns: 1fr 15fr 3fr 3fr 3fr;\n        gap: 1em;\n\n        & > * {\n            margin-top: 0;\n            align-self: start;\n        }\n    }\n`;\nconst Header = styled.header`\n    @media (min-width: 1380px) {\n        margin-right: 3.75em;\n    }\n`;\nconst Lead = styled.h3`\n    display: inline-block;\n    color: ${({\n  current,\n  theme\n}) => current ? theme.colors.attention : theme.colors.positive};\n`;\nconst InternalLink = styled(Link)`\n    display: block;\n    font-size: ${({\n  theme\n}) => theme.typography.default};\n    font-weight: 400;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst Description = styled(Accordion)`\n    margin-top: 0.25em;\n`;\nconst Date = styled.time`\n    display: inline-block;\n`;\nconst Duration = styled.div`\n    position: relative;\n    display: inline-block;\n    margin-left: 1em;\n\n    &::before {\n        content: 'â€¢';\n        position: absolute;\n        top: 50%;\n        left: -0.5em;\n        transform: translate(-50%, -50%);\n    }\n\n    @media (min-width: 1380px) {\n        margin-left: 0;\n        &::before {\n            display: none;\n        }\n    }\n`;\nconst ExternalLink = styled.a`\n    display: inline-block;\n    margin-bottom: 0.25em;\n    color: inherit;\n    text-decoration: none;\n\n    &:hover {\n        text-decoration: underline;\n    }\n\n    @media (min-width: 1380px) {\n        margin-bottom: 0;\n    }\n`;\nconst Controls = styled.div`\n    display: flex;\n    align-items: center;\n    @media (min-width: 1380px) {\n        margin-right: 1em;\n        order: -1;\n    }\n`;\nconst StyledPlayButton = styled(PlayButton)`\n    margin-right: 1em;\n`;\nconst StyledPauseButton = styled(PauseButton)`\n    margin-right: 1em;\n`;\n\nconst EpisodeItem = ({\n  id,\n  show,\n  name,\n  description,\n  releaseDate,\n  duration,\n  external,\n  episodes\n}) => {\n  const {\n    loadQueue,\n    currentEpisode\n  } = useContext(QueueContext);\n  const {\n    isPlaying,\n    startPlaying,\n    stopPlaying\n  } = useContext(PlayerContext);\n\n  const loadEpisodes = () => {\n    loadQueue(id, show, episodes);\n  };\n\n  return /*#__PURE__*/React.createElement(Element, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Lead, {\n    current: (currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.id) === id ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InternalLink, {\n    to: `/episodes/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, description)), /*#__PURE__*/React.createElement(Date, {\n    dateTime: releaseDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, releaseDate), /*#__PURE__*/React.createElement(Duration, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, convertTime(duration)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExternalLink, {\n    href: external,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Listen on Spotify\")), /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, !isPlaying && (currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.id) === id ? /*#__PURE__*/React.createElement(StyledPlayButton, {\n    onClick: startPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }) : isPlaying && (currentEpisode === null || currentEpisode === void 0 ? void 0 : currentEpisode.id) === id ? /*#__PURE__*/React.createElement(StyledPauseButton, {\n    onClick: stopPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(StyledPlayButton, {\n    onClick: loadEpisodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(LikeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default EpisodeItem;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Episodes/EpisodesList/EpisodeItem/EpisodeItem.js"],"names":["React","useContext","Link","styled","QueueContext","PlayerContext","Accordion","convertTime","LikeButton","PlayButton","PauseButton","Element","li","theme","colors","specific","Header","header","Lead","h3","current","attention","positive","InternalLink","typography","default","Description","Date","time","Duration","div","ExternalLink","a","Controls","StyledPlayButton","StyledPauseButton","EpisodeItem","id","show","name","description","releaseDate","duration","external","episodes","loadQueue","currentEpisode","isPlaying","startPlaying","stopPlaying","loadEpisodes"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { QueueContext } from '../../../../../contexts/QueueContextProvider';\nimport { PlayerContext } from '../../../../../contexts/PlayerContextProvider';\nimport Accordion from '../../../../../UI/Accordion/Accordion';\nimport convertTime from '../../../../../utils/convertTime';\nimport LikeButton from '../../../../../UI/LikeButton/LikeButton';\nimport PlayButton from '../../../../../UI/PlayButton/PlayButton';\nimport PauseButton from '../../../../../UI/PauseButton/PauseButton';\n\nconst Element = styled.li`\n    margin-top: 0.75em;\n    padding-top: 0.75em;\n    border-top: 1px solid #707070;\n    color: ${({ theme }) => theme.colors.specific};\n\n    & > * {\n        margin-top: 0.25em;\n    }\n\n    @media (min-width: 1380px) {\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-columns: 1fr 15fr 3fr 3fr 3fr;\n        gap: 1em;\n\n        & > * {\n            margin-top: 0;\n            align-self: start;\n        }\n    }\n`;\n\nconst Header = styled.header`\n    @media (min-width: 1380px) {\n        margin-right: 3.75em;\n    }\n`;\n\nconst Lead = styled.h3`\n    display: inline-block;\n    color: ${({ current, theme }) => current ? theme.colors.attention : theme.colors.positive};\n`;\n\nconst InternalLink = styled(Link)`\n    display: block;\n    font-size: ${({ theme }) => theme.typography.default};\n    font-weight: 400;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst Description = styled(Accordion)`\n    margin-top: 0.25em;\n`;\n\nconst Date = styled.time`\n    display: inline-block;\n`;\n\nconst Duration = styled.div`\n    position: relative;\n    display: inline-block;\n    margin-left: 1em;\n\n    &::before {\n        content: 'â€¢';\n        position: absolute;\n        top: 50%;\n        left: -0.5em;\n        transform: translate(-50%, -50%);\n    }\n\n    @media (min-width: 1380px) {\n        margin-left: 0;\n        &::before {\n            display: none;\n        }\n    }\n`;\n\nconst ExternalLink = styled.a`\n    display: inline-block;\n    margin-bottom: 0.25em;\n    color: inherit;\n    text-decoration: none;\n\n    &:hover {\n        text-decoration: underline;\n    }\n\n    @media (min-width: 1380px) {\n        margin-bottom: 0;\n    }\n`;\n\nconst Controls = styled.div`\n    display: flex;\n    align-items: center;\n    @media (min-width: 1380px) {\n        margin-right: 1em;\n        order: -1;\n    }\n`;\n\nconst StyledPlayButton = styled(PlayButton)`\n    margin-right: 1em;\n`;\n\nconst StyledPauseButton = styled(PauseButton)`\n    margin-right: 1em;\n`;\n\nconst EpisodeItem = ({\n    id,\n    show,\n    name,\n    description,\n    releaseDate,\n    duration,\n    external,\n    episodes\n}) => {\n    const { loadQueue, currentEpisode } = useContext(QueueContext);\n    const { isPlaying, startPlaying, stopPlaying } = useContext(PlayerContext);\n\n    const loadEpisodes = () => {\n        loadQueue(id, show, episodes);\n    }\n\n    return (\n        <Element>\n            <Header>\n                <Lead current={currentEpisode?.id === id ? true : false}>\n                    <InternalLink to={`/episodes/${id}`}>{name}</InternalLink>\n                </Lead>\n                <Description>{description}</Description>\n            </Header>\n\n            <Date dateTime={releaseDate}>\n                {releaseDate}\n            </Date>\n\n            <Duration>{convertTime(duration)}</Duration>\n\n            <div>\n                <ExternalLink href={external}>Listen on Spotify</ExternalLink>\n            </div>\n\n            <Controls>\n                { !isPlaying && currentEpisode?.id === id ?\n                    <StyledPlayButton onClick={startPlaying}/>\n                    :\n                    isPlaying && currentEpisode?.id === id ?\n                        <StyledPauseButton onClick={stopPlaying}/>\n                        :\n                        <StyledPlayButton onClick={loadEpisodes}/>\n                }\n                <LikeButton/>\n            </Controls>\n        </Element>\n    );\n}\n\nexport default EpisodeItem;"]},"metadata":{},"sourceType":"module"}