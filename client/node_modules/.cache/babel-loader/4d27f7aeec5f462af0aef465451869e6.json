{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Tiles/Tile/Tile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport styled from 'styled-components';\nconst Item = styled.li`\n    margin-bottom: 2em;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n\n    @media (min-width: 500px) {\n        margin-bottom: 0;\n    }\n`;\nconst Outer = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n`;\nconst Inner = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    &:hover div {\n        opacity: 1;\n        visibility: visible;\n    }\n`;\nconst Header = styled.header`\n    word-wrap: break-word;\n`;\nconst Lead = styled.h2`\n    display: -webkit-box;\n    margin-top: 0.75em;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    font-size: 1em;\n    font-weight: 400;\n`;\nconst InternalLink = styled(Link)`\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nconst Description = styled.p`\n    display: -webkit-box;\n    margin-top: 0.25em;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3; /* Number of lines */\n    color: ${({\n  theme\n}) => theme.colors.specific};\n`;\n\nfunction Tile({\n  id,\n  title,\n  description,\n  image,\n  type\n}) {\n  const [reference, updateReference] = useState('');\n  useEffect(() => {\n    if (type === SEARCH_TYPES.show) {\n      updateReference(`/shows/${id}`);\n      return;\n    }\n\n    if (type === SEARCH_TYPES.episode) {\n      updateReference(`/episodes/${id}`);\n      return;\n    }\n  }, [id, type]);\n  return /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Outer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Inner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InternalLink, {\n    to: reference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Lead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InternalLink, {\n    to: reference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, title)), /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, description)));\n}\n\nexport default withRouter(Tile);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Tiles/Tile/Tile.js"],"names":["React","useState","useEffect","Link","withRouter","SEARCH_TYPES","styled","Item","li","Outer","div","Inner","Header","header","Lead","h2","InternalLink","Description","p","theme","colors","specific","Tile","id","title","description","image","type","reference","updateReference","show","episode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,EAAG;;;;;;;;;;CAAvB;AAYA,MAAMC,KAAK,GAAGH,MAAM,CAACI,GAAI;;;;CAAzB;AAMA,MAAMC,KAAK,GAAGL,MAAM,CAACI,GAAI;;;;;;;;;;;;;;;;;CAAzB;AAmBA,MAAME,MAAM,GAAGN,MAAM,CAACO,MAAO;;CAA7B;AAIA,MAAMC,IAAI,GAAGR,MAAM,CAACS,EAAG;;;;;;;;;;CAAvB;AAYA,MAAMC,YAAY,GAAGV,MAAM,CAACH,IAAD,CAAO;;;;;;;;;CAAlC;AAWA,MAAMc,WAAW,GAAGX,MAAM,CAACY,CAAE;;;;;;;;aAQhB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,QAAS;CARlD;;AAWA,SAASC,IAAT,CAAc;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA;AAAjC,CAAd,EAAsD;AAClD,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+B5B,QAAQ,CAAC,EAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,IAAI,KAAKtB,YAAY,CAACyB,IAA1B,EAAgC;AAC5BD,MAAAA,eAAe,CAAE,UAASN,EAAG,EAAd,CAAf;AACA;AACH;;AAED,QAAII,IAAI,KAAKtB,YAAY,CAAC0B,OAA1B,EAAmC;AAC/BF,MAAAA,eAAe,CAAE,aAAYN,EAAG,EAAjB,CAAf;AACA;AACH;AACJ,GAVQ,EAUN,CAACA,EAAD,EAAKI,IAAL,CAVM,CAAT;AAYA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEF,KAAV;AAAiB,IAAA,GAAG,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,eAQI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEI,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,CADJ,CADJ,eAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,WADL,CANJ,CARJ,CADJ;AAqBH;;AAED,eAAerB,UAAU,CAACkB,IAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport styled from 'styled-components';\n\nconst Item = styled.li`\n    margin-bottom: 2em;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n\n    @media (min-width: 500px) {\n        margin-bottom: 0;\n    }\n`;\n\nconst Outer = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n`;\n\nconst Inner = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    &:hover div {\n        opacity: 1;\n        visibility: visible;\n    }\n`;\n\nconst Header = styled.header`\n    word-wrap: break-word;\n`;\n\nconst Lead = styled.h2`\n    display: -webkit-box;\n    margin-top: 0.75em;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    font-size: 1em;\n    font-weight: 400;\n`;\n\nconst InternalLink = styled(Link)`\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nconst Description = styled.p`\n    display: -webkit-box;\n    margin-top: 0.25em;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 3; /* Number of lines */\n    color: ${({ theme }) => theme.colors.specific};\n`;\n\nfunction Tile({ id, title, description, image, type}) {\n    const [reference, updateReference] = useState('');\n\n    useEffect(() => {\n        if (type === SEARCH_TYPES.show) {\n            updateReference(`/shows/${id}`);\n            return;\n        }\n\n        if (type === SEARCH_TYPES.episode) {\n            updateReference(`/episodes/${id}`);\n            return;\n        }\n    }, [id, type]);\n\n    return (\n        <Item>\n            <Outer>\n                <Inner>\n                    <InternalLink to={reference}>\n                        <img src={image} alt={title}/>\n                    </InternalLink>\n                </Inner>\n            </Outer>\n            <Header>\n                <Lead>\n                    <InternalLink to={reference}>\n                        {title}\n                    </InternalLink>\n                </Lead>\n                <Description>\n                    {description}\n                </Description>\n            </Header>\n        </Item>\n    );\n}\n\nexport default withRouter(Tile);"]},"metadata":{},"sourceType":"module"}