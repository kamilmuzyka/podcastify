{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/UI/Accordion/Accordion.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Element = styled.p`\n    display: inline-block;\n    max-width: 100%;\n    max-height: ${({\n  isOpen\n}) => isOpen ? '35em' : '4.5em'};\n    line-height: 1.5em;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-wrap: break-word;\n    transition: max-height 0.3s ease-in-out;\n    cursor: pointer;\n`;\n\nconst Accordion = props => {\n  const [isOpen, updateIsOpen] = useState(false);\n\n  const toggleHandler = () => {\n    updateIsOpen(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(Element, Object.assign({}, props, {\n    isOpen: isOpen,\n    onClick: toggleHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), props.children);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/UI/Accordion/Accordion.js"],"names":["React","useState","styled","Element","p","isOpen","Accordion","props","updateIsOpen","toggleHandler","prev","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,CAAE;;;kBAGP,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgBA,MAAM,GAAG,MAAH,GAAY,OAAQ;;;;;;;CAH5D;;AAYA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM,CAACF,MAAD,EAASG,YAAT,IAAyBP,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMQ,aAAa,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAACE,IAAI,IAAI,CAACA,IAAV,CAAZ;AACH,GAFD;;AAIA,sBACI,oBAAC,OAAD,oBAAaH,KAAb;AAAoB,IAAA,MAAM,EAAEF,MAA5B;AAAoC,IAAA,OAAO,EAAEI,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKF,KAAK,CAACI,QADX,CADJ;AAKH,CAbD;;AAeA,eAAeL,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Element = styled.p`\n    display: inline-block;\n    max-width: 100%;\n    max-height: ${({ isOpen }) => isOpen ? '35em' : '4.5em'};\n    line-height: 1.5em;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-wrap: break-word;\n    transition: max-height 0.3s ease-in-out;\n    cursor: pointer;\n`;\n\nconst Accordion = (props) => {\n\n    const [isOpen, updateIsOpen] = useState(false);\n\n    const toggleHandler = () => {\n        updateIsOpen(prev => !prev);\n    }\n\n    return (\n        <Element {...props} isOpen={isOpen} onClick={toggleHandler}>\n            {props.children}\n        </Element>\n    );\n}\n\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}