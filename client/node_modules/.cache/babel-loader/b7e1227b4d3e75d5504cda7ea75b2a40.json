{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Shows/Show/Show.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\nimport Details from '../../Details/Details';\nimport EpisodesList from '../../Episodes/EpisodesList/EpisodesList';\n\nconst Show = ({\n  location\n}) => {\n  const SHOW_ID = extractId(location.pathname);\n  const [details, updateDetails] = useState({});\n  const [isLoading, updateIsLoading] = useState(true);\n\n  const handleShowFollow = id => {\n    Spotify.saveUserShow(id);\n  };\n\n  const handleShowUnfollow = id => {\n    Spotify.removeUserShow(id);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const show = await Spotify.getShowDetails(SHOW_ID);\n        updateDetails({\n          name: show.name,\n          showId: show.id,\n          description: show.description,\n          external: show.external_urls.spotify,\n          type: SEARCH_TYPES.show,\n          publisher: show.publisher,\n          image: show.images[1].url,\n          episodes: show.episodes\n        });\n        updateIsLoading(false);\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, [SHOW_ID]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    details: details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EpisodesList, {\n    episodes: details.episodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n    loading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Show);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Shows/Show/Show.js"],"names":["React","useState","useEffect","Fragment","withRouter","SEARCH_TYPES","Spotify","extractId","WorkspaceLoading","Details","EpisodesList","Show","location","SHOW_ID","pathname","details","updateDetails","isLoading","updateIsLoading","handleShowFollow","id","saveUserShow","handleShowUnfollow","removeUserShow","show","getShowDetails","name","showId","description","external","external_urls","spotify","type","publisher","image","images","url","episodes","err","Error","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3B,QAAMC,OAAO,GAAGN,SAAS,CAACK,QAAQ,CAACE,QAAV,CAAzB;AACA,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2Bf,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACgB,SAAD,EAAYC,eAAZ,IAA+BjB,QAAQ,CAAC,IAAD,CAA7C;;AAEA,QAAMkB,gBAAgB,GAAIC,EAAD,IAAQ;AAC7Bd,IAAAA,OAAO,CAACe,YAAR,CAAqBD,EAArB;AACH,GAFD;;AAIA,QAAME,kBAAkB,GAAIF,EAAD,IAAQ;AAC/Bd,IAAAA,OAAO,CAACiB,cAAR,CAAuBH,EAAvB;AACH,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAI;AACA,cAAMsB,IAAI,GAAG,MAAMlB,OAAO,CAACmB,cAAR,CAAuBZ,OAAvB,CAAnB;AACAG,QAAAA,aAAa,CAAC;AACVU,UAAAA,IAAI,EAAEF,IAAI,CAACE,IADD;AAEVC,UAAAA,MAAM,EAAEH,IAAI,CAACJ,EAFH;AAGVQ,UAAAA,WAAW,EAAEJ,IAAI,CAACI,WAHR;AAIVC,UAAAA,QAAQ,EAAEL,IAAI,CAACM,aAAL,CAAmBC,OAJnB;AAKVC,UAAAA,IAAI,EAAE3B,YAAY,CAACmB,IALT;AAMVS,UAAAA,SAAS,EAAET,IAAI,CAACS,SANN;AAOVC,UAAAA,KAAK,EAAEV,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAeC,GAPZ;AAQVC,UAAAA,QAAQ,EAAEb,IAAI,CAACa;AARL,SAAD,CAAb;AAUAnB,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH,OAbD,CAaE,OAAMoB,GAAN,EAAW;AACT,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AACJ,KAjBD;AAkBH,GAnBQ,EAmBN,CAACzB,OAAD,CAnBM,CAAT;AAqBA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,OAAO,CAACsB,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEpB,SAAS,CAACuB,QAAV,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAzCD;;AA2CA,eAAepC,UAAU,CAACO,IAAD,CAAzB","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\nimport Details from '../../Details/Details';\nimport EpisodesList from '../../Episodes/EpisodesList/EpisodesList';\n\nconst Show = ({ location }) => {\n    const SHOW_ID = extractId(location.pathname);\n    const [details, updateDetails] = useState({});\n    const [isLoading, updateIsLoading] = useState(true);\n\n    const handleShowFollow = (id) => {\n        Spotify.saveUserShow(id);\n    };\n\n    const handleShowUnfollow = (id) => {\n        Spotify.removeUserShow(id);\n    };\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const show = await Spotify.getShowDetails(SHOW_ID);\n                updateDetails({\n                    name: show.name,\n                    showId: show.id,\n                    description: show.description,\n                    external: show.external_urls.spotify,\n                    type: SEARCH_TYPES.show,\n                    publisher: show.publisher,\n                    image: show.images[1].url,\n                    episodes: show.episodes,\n                });\n                updateIsLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, [SHOW_ID]);\n\n    return (\n        <Fragment>\n            <Details details={details} />\n            <EpisodesList episodes={details.episodes}/>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nexport default withRouter(Show);"]},"metadata":{},"sourceType":"module"}