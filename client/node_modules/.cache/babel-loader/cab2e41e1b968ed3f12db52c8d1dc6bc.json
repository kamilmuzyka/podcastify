{"ast":null,"code":"import _classCallCheck from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kamil.muzyka/Desktop/podcastify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var settings={clientID:'c9587c71088b4ad78b3f54fda5ba1544',redirectURI:'http://localhost:3000/'};var Auth=/*#__PURE__*/function(){function Auth(){_classCallCheck(this,Auth);}_createClass(Auth,null,[{key:\"logIn\",value:function logIn(){var params=new URLSearchParams({client_id:settings.clientID,redirect_uri:settings.redirectURI,response_type:'token'}).toString();window.location.href='https://accounts.spotify.com/authorize?'+params;}},{key:\"check\",value:function check(){function accessDataAvailable(){var access=JSON.parse(localStorage.getItem('access'));if(access){var expires=access.expires;var now=new Date().getTime();return now<expires?true:false;}return false;}function hashAvailable(){var hash=window.location.hash;return hash?true:false;}if(accessDataAvailable()){return true;}if(hashAvailable()){var hash=window.location.hash;var replaced=hash.replace('#','?');var params=new URLSearchParams(replaced);var token=params.get('access_token');var expiresAddOn=params.get('expires_in')*1000;var expiresBase=+new Date().getTime();var expires=expiresBase+expiresAddOn;localStorage.setItem('access',JSON.stringify({token:token,expires:expires}));return true;}return false;}}]);return Auth;}();export default Auth;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/controllers/Auth.js"],"names":["settings","clientID","redirectURI","Auth","params","URLSearchParams","client_id","redirect_uri","response_type","toString","window","location","href","accessDataAvailable","access","JSON","parse","localStorage","getItem","expires","now","Date","getTime","hashAvailable","hash","replaced","replace","token","get","expiresAddOn","expiresBase","setItem","stringify"],"mappings":"wTAAA,GAAMA,CAAAA,QAAQ,CAAG,CACbC,QAAQ,CAAE,kCADG,CAEbC,WAAW,CAAE,wBAFA,CAAjB,C,GAKMC,CAAAA,I,gIACa,CACX,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoB,CAC/BC,SAAS,CAAEN,QAAQ,CAACC,QADW,CAE/BM,YAAY,CAAEP,QAAQ,CAACE,WAFQ,CAG/BM,aAAa,CAAE,OAHgB,CAApB,EAIZC,QAJY,EAAf,CAKAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,0CAA4CR,MAAnE,CACH,C,qCAEc,CACX,QAASS,CAAAA,mBAAT,EAA+B,CAC3B,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAf,CACA,GAAIJ,MAAJ,CAAY,CACR,GAAMK,CAAAA,OAAO,CAAGL,MAAM,CAACK,OAAvB,CACA,GAAMC,CAAAA,GAAG,CAAI,GAAIC,CAAAA,IAAJ,EAAD,CAAaC,OAAb,EAAZ,CACA,MAAQF,CAAAA,GAAG,CAAGD,OAAP,CAAkB,IAAlB,CAAyB,KAAhC,CACH,CACD,MAAO,MAAP,CACH,CAED,QAASI,CAAAA,aAAT,EAAyB,CACrB,GAAMC,CAAAA,IAAI,CAAGd,MAAM,CAACC,QAAP,CAAgBa,IAA7B,CACA,MAAOA,CAAAA,IAAI,CAAG,IAAH,CAAU,KAArB,CACH,CAED,GAAIX,mBAAmB,EAAvB,CAA2B,CACvB,MAAO,KAAP,CACH,CAED,GAAIU,aAAa,EAAjB,CAAqB,CACjB,GAAMC,CAAAA,IAAI,CAAGd,MAAM,CAACC,QAAP,CAAgBa,IAA7B,CACA,GAAMC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAkB,GAAlB,CAAjB,CACA,GAAMtB,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBoB,QAApB,CAAf,CACA,GAAME,CAAAA,KAAK,CAAGvB,MAAM,CAACwB,GAAP,CAAW,cAAX,CAAd,CACA,GAAMC,CAAAA,YAAY,CAAGzB,MAAM,CAACwB,GAAP,CAAW,YAAX,EAA2B,IAAhD,CACA,GAAME,CAAAA,WAAW,CAAG,CAAG,GAAIT,CAAAA,IAAJ,EAAD,CAAaC,OAAb,EAAtB,CACA,GAAMH,CAAAA,OAAO,CAAGW,WAAW,CAAGD,YAA9B,CACAZ,YAAY,CAACc,OAAb,CAAqB,QAArB,CAA+BhB,IAAI,CAACiB,SAAL,CAAe,CAC1CL,KAAK,CAALA,KAD0C,CAE1CR,OAAO,CAAPA,OAF0C,CAAf,CAA/B,EAIA,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,C,oBAGL,cAAehB,CAAAA,IAAf","sourcesContent":["const settings = {\n    clientID: 'c9587c71088b4ad78b3f54fda5ba1544',\n    redirectURI: 'http://localhost:3000/'\n}\n\nclass Auth {\n    static logIn() {\n        const params = new URLSearchParams({\n            client_id: settings.clientID,\n            redirect_uri: settings.redirectURI,\n            response_type: 'token'\n        }).toString();\n        window.location.href = 'https://accounts.spotify.com/authorize?' + params;\n    }\n\n    static check() {\n        function accessDataAvailable() {\n            const access = JSON.parse(localStorage.getItem('access'));\n            if (access) {\n                const expires = access.expires;\n                const now = (new Date()).getTime();\n                return (now < expires) ? true : false;\n            }\n            return false;\n        }\n\n        function hashAvailable() {\n            const hash = window.location.hash;\n            return hash ? true : false;\n        }\n\n        if (accessDataAvailable()) {\n            return true;\n        }\n\n        if (hashAvailable()) {\n            const hash = window.location.hash;\n            const replaced = hash.replace('#', '?');\n            const params = new URLSearchParams(replaced);\n            const token = params.get('access_token');\n            const expiresAddOn = params.get('expires_in') * 1000;\n            const expiresBase = + (new Date()).getTime();\n            const expires = expiresBase + expiresAddOn;\n            localStorage.setItem('access', JSON.stringify({\n                token,\n                expires\n            }));\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}