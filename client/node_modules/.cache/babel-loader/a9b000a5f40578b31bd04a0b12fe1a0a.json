{"ast":null,"code":"class Spotify {\n  static retrieveToken() {\n    if (localStorage.getItem('access')) {\n      const {\n        token\n      } = JSON.parse(localStorage.getItem('access'));\n      return token ? token : false;\n    }\n\n    return false;\n  }\n\n  static async getSearchResults(query) {\n    const token = this.retrieveToken();\n\n    if (!token) {\n      throw new Error('Not token provided');\n    }\n\n    try {\n      const data = await fetch(`https://api.spotify.com/v1/search?q=${query}&type=show,episode&limit=50`, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      return await data.json();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  static async getShowDetails(id) {\n    const token = this.retrieveToken();\n\n    if (!token) {\n      return;\n    }\n\n    try {\n      const data = await fetch(`https://api.spotify.com/v1/shows/${id}`, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      return await data.json();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  static async getUserProfile() {\n    const token = this.retrieveToken();\n\n    if (!token) {\n      return;\n    }\n\n    try {\n      const data = await fetch(`https://api.spotify.com/v1/me`, {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const results = await data.json();\n      return results;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n}\n\nexport default Spotify;","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/models/Spotify.js"],"names":["Spotify","retrieveToken","localStorage","getItem","token","JSON","parse","getSearchResults","query","Error","data","fetch","headers","json","err","console","error","getShowDetails","id","getUserProfile","results"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AAEV,SAAOC,aAAP,GAAuB;AACnB,QAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AAChC,YAAM;AACFC,QAAAA;AADE,UAEFC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAFJ;AAGA,aAAOC,KAAK,GAAGA,KAAH,GAAW,KAAvB;AACH;;AACD,WAAO,KAAP;AACH;;AAED,eAAaG,gBAAb,CAA8BC,KAA9B,EAAqC;AACjC,UAAMJ,KAAK,GAAG,KAAKH,aAAL,EAAd;;AAEA,QAAI,CAACG,KAAL,EAAY;AACR,YAAM,IAAIK,KAAJ,CAAU,oBAAV,CAAN;AACH;;AAED,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,uCAAsCH,KAAM,6BAA9C,EAA4E;AAChGI,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYR;AADxB;AADuF,OAA5E,CAAxB;AAKA,aAAO,MAAMM,IAAI,CAACG,IAAL,EAAb;AACH,KAPD,CAOE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;;AAED,eAAaG,cAAb,CAA4BC,EAA5B,EAAgC;AAC5B,UAAMd,KAAK,GAAG,KAAKH,aAAL,EAAd;;AAEA,QAAI,CAACG,KAAL,EAAY;AACR;AACH;;AAED,QAAI;AACA,YAAMM,IAAI,GAAG,MAAMC,KAAK,CAAE,oCAAmCO,EAAG,EAAxC,EAA2C;AAC/DN,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYR;AADxB;AADsD,OAA3C,CAAxB;AAKA,aAAO,MAAMM,IAAI,CAACG,IAAL,EAAb;AACH,KAPD,CAOE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;;AAED,eAAaK,cAAb,GAA8B;AAC1B,UAAMf,KAAK,GAAG,KAAKH,aAAL,EAAd;;AAEA,QAAI,CAACG,KAAL,EAAY;AACR;AACH;;AAED,QAAI;AACA,YAAMM,IAAI,GAAG,MAAMC,KAAK,CAAE,+BAAF,EAAkC;AACtDC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYR;AADxB;AAD6C,OAAlC,CAAxB;AAKA,YAAMgB,OAAO,GAAG,MAAMV,IAAI,CAACG,IAAL,EAAtB;AACA,aAAOO,OAAP;AACH,KARD,CAQE,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;;AApES;;AAuEd,eAAed,OAAf","sourcesContent":["class Spotify {\n\n    static retrieveToken() {\n        if (localStorage.getItem('access')) {\n            const {\n                token\n            } = JSON.parse(localStorage.getItem('access'));\n            return token ? token : false;\n        }\n        return false;\n    }\n\n    static async getSearchResults(query) {\n        const token = this.retrieveToken();\n\n        if (!token) {\n            throw new Error('Not token provided');\n        }\n\n        try {\n            const data = await fetch(`https://api.spotify.com/v1/search?q=${query}&type=show,episode&limit=50`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await data.json();\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static async getShowDetails(id) {\n        const token = this.retrieveToken();\n\n        if (!token) {\n            return;\n        }\n\n        try {\n            const data = await fetch(`https://api.spotify.com/v1/shows/${id}`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            return await data.json();\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    static async getUserProfile() {\n        const token = this.retrieveToken();\n\n        if (!token) {\n            return;\n        }\n\n        try {\n            const data = await fetch(`https://api.spotify.com/v1/me`, {\n                headers: {\n                    'Authorization': 'Bearer ' + token\n                }\n            });\n            const results = await data.json();\n            return results;\n        } catch (err) {\n            console.error(err);\n        }\n    }\n}\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}