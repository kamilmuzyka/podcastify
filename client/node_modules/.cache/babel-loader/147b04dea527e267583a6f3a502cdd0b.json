{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Shows/Show/Show.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\nimport Details from '../../Details/Details';\nimport EpisodesList from '../../Episodes/EpisodesList/EpisodesList';\n\nconst ShowDetails = ({\n  location\n}) => {\n  const [isLoading, updateIsLoading] = useState(true);\n  const [details, updateDetails] = useState({});\n  useEffect(() => {\n    (async () => {\n      const path = location.pathname;\n      const showId = extractId(path);\n\n      try {\n        const show = await Spotify.getShowDetails(showId);\n        updateDetails({\n          name: show.name,\n          description: show.description,\n          external: show.external_urls.spotify,\n          type: SEARCH_TYPES.show,\n          publisher: show.publisher,\n          image: show.images[1].url,\n          episodes: show.episodes\n        });\n        updateIsLoading(false);\n      } catch (err) {\n        throw new Error(err);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    payload: details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EpisodesList, {\n    episodes: details.episodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n    loading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(ShowDetails);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/Shows/Show/Show.js"],"names":["React","useState","useEffect","Fragment","withRouter","SEARCH_TYPES","Spotify","extractId","WorkspaceLoading","Details","EpisodesList","ShowDetails","location","isLoading","updateIsLoading","details","updateDetails","path","pathname","showId","show","getShowDetails","name","description","external","external_urls","spotify","type","publisher","image","images","url","episodes","err","Error","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+Bb,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACc,OAAD,EAAUC,aAAV,IAA2Bf,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMe,IAAI,GAAGL,QAAQ,CAACM,QAAtB;AACA,YAAMC,MAAM,GAAGZ,SAAS,CAACU,IAAD,CAAxB;;AACA,UAAI;AACA,cAAMG,IAAI,GAAG,MAAMd,OAAO,CAACe,cAAR,CAAuBF,MAAvB,CAAnB;AACAH,QAAAA,aAAa,CAAC;AACVM,UAAAA,IAAI,EAAEF,IAAI,CAACE,IADD;AAEVC,UAAAA,WAAW,EAAEH,IAAI,CAACG,WAFR;AAGVC,UAAAA,QAAQ,EAAEJ,IAAI,CAACK,aAAL,CAAmBC,OAHnB;AAIVC,UAAAA,IAAI,EAAEtB,YAAY,CAACe,IAJT;AAKVQ,UAAAA,SAAS,EAAER,IAAI,CAACQ,SALN;AAMVC,UAAAA,KAAK,EAAET,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAeC,GANZ;AAOVC,UAAAA,QAAQ,EAAEZ,IAAI,CAACY;AAPL,SAAD,CAAb;AASAlB,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH,OAZD,CAYE,OAAMmB,GAAN,EAAW;AACT,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AACJ,KAlBD;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAElB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,OAAO,CAACiB,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEnB,SAAS,CAACsB,QAAV,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAjCD;;AAmCA,eAAe/B,UAAU,CAACO,WAAD,CAAzB","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../../constants';\nimport Spotify from '../../../../models/Spotify';\nimport extractId from '../../../../utils/extractId';\nimport WorkspaceLoading from '../../WorkspaceLoading/WorkspaceLoading';\nimport Details from '../../Details/Details';\nimport EpisodesList from '../../Episodes/EpisodesList/EpisodesList';\n\nconst ShowDetails = ({ location }) => {\n    const [isLoading, updateIsLoading] = useState(true);\n    const [details, updateDetails] = useState({});\n\n    useEffect(() => {\n        (async () => {\n            const path = location.pathname;\n            const showId = extractId(path);\n            try {\n                const show = await Spotify.getShowDetails(showId);\n                updateDetails({\n                    name: show.name,\n                    description: show.description,\n                    external: show.external_urls.spotify,\n                    type: SEARCH_TYPES.show,\n                    publisher: show.publisher,\n                    image: show.images[1].url,\n                    episodes: show.episodes\n                });\n                updateIsLoading(false);\n            } catch(err) {\n                throw new Error(err);\n            }\n        })();\n    }, []);\n\n    return (\n        <Fragment>\n            <Details payload={details}/>\n            <EpisodesList episodes={details.episodes}/>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nexport default withRouter(ShowDetails);"]},"metadata":{},"sourceType":"module"}