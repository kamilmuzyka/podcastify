{"ast":null,"code":"var _jsxFileName = \"/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/SearchResults/SearchResults.js\";\nimport React, { useState, useContext, useEffect, Fragment } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Spotify from '../../../models/Spotify';\nimport WorkspaceLoading from '../WorkspaceLoading/WorkspaceLoading';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nfunction SearchResults(props) {\n  const [isLoading, updateIsLoading] = useState(true);\n  const [shows, updateShows] = useState([]);\n  const [episodes, updateEpisodes] = useState([]);\n\n  function prepareShows(shows) {\n    if (shows.length === 0) {\n      updateShows([]);\n      return;\n    }\n\n    const updatedShows = shows.map(show => {\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: show.id,\n        id: show.id,\n        title: show.name,\n        description: show.description,\n        image: show.images[1].url,\n        type: SEARCH_TYPES.show,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      });\n    });\n    updateShows(updatedShows);\n  }\n\n  function prepareEpisodes(episodes) {\n    if (episodes.length === 0) {\n      updateEpisodes([]);\n      return;\n    }\n\n    const updatedEpisodes = episodes.map(episode => {\n      return /*#__PURE__*/React.createElement(Tile, {\n        key: episode.id,\n        id: episode.id,\n        title: episode.name,\n        description: episode.description,\n        image: episode.images[1].url,\n        type: SEARCH_TYPES.episode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }\n      });\n    });\n    updateEpisodes(updatedEpisodes);\n  }\n\n  useEffect(() => {\n    const search = new URLSearchParams(props.history.location.search);\n    console.log(search.get('query'));\n    let query;\n\n    if (query) {\n      (async () => {\n        try {\n          const {\n            shows,\n            episodes\n          } = await Spotify.getSearchResults(query);\n          if (shows) prepareShows(shows.items);\n          if (episodes) prepareEpisodes(episodes.items);\n          updateIsLoading(false);\n        } catch (err) {\n          console.error(err);\n        }\n      })();\n    }\n  });\n\n  if (shows.length > 0 && episodes.length > 0) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tiles, {\n      title: \"Shows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, shows), /*#__PURE__*/React.createElement(Tiles, {\n      title: \"Episodes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, episodes), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n      loading: isLoading.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  if (shows.length > 0 && episodes.length === 0) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tiles, {\n      title: \"Shows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, shows), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n      loading: isLoading.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  if (shows.length === 0 && episodes.length > 0) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tiles, {\n      title: \"Episodes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, episodes), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n      loading: isLoading.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  if (shows.length === 0 && episodes.length === 0) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Nothing found\"), /*#__PURE__*/React.createElement(WorkspaceLoading, {\n      loading: isLoading.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }));\n  }\n}\n\nexport default withRouter(SearchResults);","map":{"version":3,"sources":["/Users/kamil.muzyka/Desktop/podcastify/src/components/Workspace/SearchResults/SearchResults.js"],"names":["React","useState","useContext","useEffect","Fragment","Redirect","withRouter","SEARCH_TYPES","Spotify","WorkspaceLoading","Tiles","Tile","SearchResults","props","isLoading","updateIsLoading","shows","updateShows","episodes","updateEpisodes","prepareShows","length","updatedShows","map","show","id","name","description","images","url","prepareEpisodes","updatedEpisodes","episode","search","URLSearchParams","history","location","console","log","get","query","getSearchResults","items","err","error","toString"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, Fragment } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { SEARCH_TYPES } from '../../../constants';\nimport Spotify from '../../../models/Spotify';\nimport WorkspaceLoading from '../WorkspaceLoading/WorkspaceLoading';\nimport Tiles from '../Tiles/Tiles';\nimport Tile from '../Tiles/Tile/Tile';\n\nfunction SearchResults(props) {\n    const [isLoading, updateIsLoading] = useState(true);\n    const [shows, updateShows] = useState([]);\n    const [episodes, updateEpisodes] = useState([]);\n\n    function prepareShows(shows) {\n        if(shows.length === 0) {\n            updateShows([]);\n            return;\n        }\n\n        const updatedShows = shows.map(show => {\n            return <Tile\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                description={show.description}\n                image={show.images[1].url}\n                type={SEARCH_TYPES.show} />\n        });\n\n        updateShows(updatedShows);\n    }\n\n    function prepareEpisodes(episodes) {\n        if (episodes.length === 0) {\n            updateEpisodes([]);\n            return;\n        }\n\n        const updatedEpisodes = episodes.map(episode => {\n            return <Tile\n                key={episode.id}\n                id={episode.id}\n                title={episode.name}\n                description={episode.description}\n                image={episode.images[1].url}\n                type={SEARCH_TYPES.episode} />\n        });\n\n        updateEpisodes(updatedEpisodes);\n    }\n\n    useEffect(() => {\n\n        const search = new URLSearchParams(props.history.location.search);\n        console.log(search.get('query'));\n\n\n        let query;\n        if(query) {\n            (async () => {\n                try {\n                    const { shows, episodes } = await Spotify.getSearchResults(query);\n                    if(shows) prepareShows(shows.items);\n                    if(episodes) prepareEpisodes(episodes.items);\n                    updateIsLoading(false);\n                } catch(err) {\n                    console.error(err);\n                }\n            })();\n        }\n    });\n\nif(shows.length > 0 && episodes.length > 0) {\n    return (\n        <Fragment>\n            <Tiles title=\"Shows\">\n                {shows}\n            </Tiles>\n            <Tiles title=\"Episodes\">\n                {episodes}\n            </Tiles>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nif(shows.length > 0 && episodes.length === 0) {\n    return (\n        <Fragment>\n            <Tiles title=\"Shows\">\n                {shows}\n            </Tiles>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nif(shows.length === 0 && episodes.length > 0) {\n    return (\n        <Fragment>\n            <Tiles title=\"Episodes\">\n                {episodes}\n            </Tiles>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\nif(shows.length === 0 && episodes.length === 0) {\n    return (\n        <Fragment>\n            <p>Nothing found</p>\n            <WorkspaceLoading loading={isLoading.toString()}/>\n        </Fragment>\n    );\n}\n\n}\n\nexport default withRouter(SearchResults);"]},"metadata":{},"sourceType":"module"}